

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sat May 25 14:18:51 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 2.05
    18                           ; Generated 20/12/2018 GMT
    19                           ; 
    20                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	idataCOMRAM
    53  007D90                     __pidataCOMRAM:
    54                           	opt callstack 0
    55                           
    56                           ;initializer for _byte7seg
    57  007D90  00FC               	dw	252
    58  007D92  0060               	dw	96
    59  007D94  00DA               	dw	218
    60  007D96  00F2               	dw	242
    61  007D98  0066               	dw	102
    62  007D9A  00B6               	dw	182
    63  007D9C  00BE               	dw	190
    64  007D9E  00E0               	dw	224
    65  007DA0  00FE               	dw	254
    66  007DA2  00F6               	dw	246
    67  0000                     _TRISD	set	3989
    68  0000                     _LATDbits	set	3980
    69                           
    70                           ; #config settings
    71                           
    72                           	psect	cinit
    73  007DBA                     __pcinit:
    74                           	opt callstack 0
    75  007DBA                     start_initialization:
    76                           	opt callstack 0
    77  007DBA                     __initialization:
    78                           	opt callstack 0
    79                           
    80                           ; Initialize objects allocated to COMRAM (20 bytes)
    81                           ; load TBLPTR registers with __pidataCOMRAM
    82  007DBA  0E90               	movlw	low __pidataCOMRAM
    83  007DBC  6EF6               	movwf	tblptrl,c
    84  007DBE  0E7D               	movlw	high __pidataCOMRAM
    85  007DC0  6EF7               	movwf	tblptrh,c
    86  007DC2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    87  007DC4  6EF8               	movwf	tblptru,c
    88  007DC6  EE00  F01D         	lfsr	0,__pdataCOMRAM
    89  007DCA  EE10 F014          	lfsr	1,20
    90  007DCE                     copy_data0:
    91  007DCE  0009               	tblrd		*+
    92  007DD0  CFF5 FFEE          	movff	tablat,postinc0
    93  007DD4  50E5               	movf	postdec1,w,c
    94  007DD6  50E1               	movf	fsr1l,w,c
    95  007DD8  E1FA               	bnz	copy_data0
    96  007DDA                     end_of_initialization:
    97                           	opt callstack 0
    98  007DDA                     __end_of__initialization:
    99                           	opt callstack 0
   100  007DDA  0100               	movlb	0
   101  007DDC  EFF0  F03E         	goto	_main	;jump to C main() function
   102                           
   103                           	psect	dataCOMRAM
   104  00001D                     __pdataCOMRAM:
   105                           	opt callstack 0
   106  00001D                     _byte7seg:
   107                           	opt callstack 0
   108  00001D                     	ds	20
   109                           
   110                           	psect	cstackCOMRAM
   111  000001                     __pcstackCOMRAM:
   112                           	opt callstack 0
   113  000001                     setTimer@minutos_dezena:
   114                           	opt callstack 0
   115                           
   116                           ; 2 bytes @ 0x0
   117  000001                     	ds	2
   118  000003                     setTimer@minutos_unidade:
   119                           	opt callstack 0
   120                           
   121                           ; 2 bytes @ 0x2
   122  000003                     	ds	2
   123  000005                     setTimer@segundos_dezena:
   124                           	opt callstack 0
   125                           
   126                           ; 2 bytes @ 0x4
   127  000005                     	ds	2
   128  000007                     setTimer@segundos_unidade:
   129                           	opt callstack 0
   130                           
   131                           ; 2 bytes @ 0x6
   132  000007                     	ds	2
   133  000009                     ??_setTimer:
   134                           
   135                           ; 1 bytes @ 0x8
   136  000009                     	ds	3
   137  00000C                     setTimer@i:
   138                           	opt callstack 0
   139                           
   140                           ; 2 bytes @ 0xB
   141  00000C                     	ds	2
   142  00000E                     setTimer@i_115:
   143                           	opt callstack 0
   144                           
   145                           ; 2 bytes @ 0xD
   146  00000E                     	ds	2
   147  000010                     setTimer@i_116:
   148                           	opt callstack 0
   149                           
   150                           ; 2 bytes @ 0xF
   151  000010                     	ds	2
   152  000012                     setTimer@i_117:
   153                           	opt callstack 0
   154                           
   155                           ; 2 bytes @ 0x11
   156  000012                     	ds	2
   157  000014                     ??_main:
   158                           
   159                           ; 1 bytes @ 0x13
   160  000014                     	ds	1
   161  000015                     main@minutos_dezena:
   162                           	opt callstack 0
   163                           
   164                           ; 2 bytes @ 0x14
   165  000015                     	ds	2
   166  000017                     main@minutos_unidade:
   167                           	opt callstack 0
   168                           
   169                           ; 2 bytes @ 0x16
   170  000017                     	ds	2
   171  000019                     main@segundos_dezena:
   172                           	opt callstack 0
   173                           
   174                           ; 2 bytes @ 0x18
   175  000019                     	ds	2
   176  00001B                     main@i:
   177                           	opt callstack 0
   178                           
   179                           ; 2 bytes @ 0x1A
   180  00001B                     	ds	2
   181                           
   182 ;;
   183 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   184 ;;
   185 ;; *************** function _main *****************
   186 ;; Defined at:
   187 ;;		line 36 in file "main.c"
   188 ;; Parameters:    Size  Location     Type
   189 ;;		None
   190 ;; Auto vars:     Size  Location     Type
   191 ;;  i               2   26[COMRAM] int 
   192 ;;  segundos_dez    2   24[COMRAM] int 
   193 ;;  minutos_unid    2   22[COMRAM] int 
   194 ;;  minutos_deze    2   20[COMRAM] int 
   195 ;; Return value:  Size  Location     Type
   196 ;;                  1    wreg      void 
   197 ;; Registers used:
   198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   199 ;; Tracked objects:
   200 ;;		On entry : 0/0
   201 ;;		On exit  : 0/0
   202 ;;		Unchanged: 0/0
   203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   204 ;;      Params:         0       0       0       0       0       0       0       0       0
   205 ;;      Locals:         8       0       0       0       0       0       0       0       0
   206 ;;      Temps:          1       0       0       0       0       0       0       0       0
   207 ;;      Totals:         9       0       0       0       0       0       0       0       0
   208 ;;Total ram usage:        9 bytes
   209 ;; Hardware stack levels required when called:    2
   210 ;; This function calls:
   211 ;;		_setTimer
   212 ;;		_setup
   213 ;; This function is called by:
   214 ;;		Startup code after reset
   215 ;; This function uses a non-reentrant model
   216 ;;
   217                           
   218                           	psect	text0
   219  007DE0                     __ptext0:
   220                           	opt callstack 0
   221  007DE0                     _main:
   222                           	opt callstack 29
   223                           
   224                           ;main.c: 37:     setup();
   225                           
   226                           ;incstack = 0
   227  007DE0  ECBE  F03E         	call	_setup	;wreg free
   228                           
   229                           ;main.c: 38:     int minutos_dezena = 0;
   230  007DE4  0E00               	movlw	0
   231  007DE6  6E16               	movwf	main@minutos_dezena+1,c
   232  007DE8  0E00               	movlw	0
   233  007DEA  6E15               	movwf	main@minutos_dezena,c
   234                           
   235                           ;main.c: 39:     int minutos_unidade = 0;
   236  007DEC  0E00               	movlw	0
   237  007DEE  6E18               	movwf	main@minutos_unidade+1,c
   238  007DF0  0E00               	movlw	0
   239  007DF2  6E17               	movwf	main@minutos_unidade,c
   240                           
   241                           ;main.c: 40:     int segundos_dezena = 0;
   242  007DF4  0E00               	movlw	0
   243  007DF6  6E1A               	movwf	main@segundos_dezena+1,c
   244  007DF8  0E00               	movlw	0
   245  007DFA  6E19               	movwf	main@segundos_dezena,c
   246  007DFC                     l956:
   247                           
   248                           ;main.c: 42:         for(int i = 0; i < 10; i++) {
   249  007DFC  0E00               	movlw	0
   250  007DFE  6E1C               	movwf	main@i+1,c
   251  007E00  0E00               	movlw	0
   252  007E02  6E1B               	movwf	main@i,c
   253  007E04                     l962:
   254                           
   255                           ;main.c: 43:             setTimer(byte7seg[minutos_dezena], byte7seg[minutos_unidade], b
      +                          yte7seg[segundos_dezena], byte7seg[i]);
   256  007E04  90D8               	bcf	status,0,c
   257  007E06  3415               	rlcf	main@minutos_dezena,w,c
   258  007E08  6ED9               	movwf	fsr2l,c
   259  007E0A  3416               	rlcf	main@minutos_dezena+1,w,c
   260  007E0C  6EDA               	movwf	fsr2h,c
   261  007E0E  0E1D               	movlw	low _byte7seg
   262  007E10  26D9               	addwf	fsr2l,f,c
   263  007E12  0E00               	movlw	high _byte7seg
   264  007E14  22DA               	addwfc	fsr2h,f,c
   265  007E16  CFDE F001          	movff	postinc2,setTimer@minutos_dezena
   266  007E1A  CFDD F002          	movff	postdec2,setTimer@minutos_dezena+1
   267  007E1E  90D8               	bcf	status,0,c
   268  007E20  3417               	rlcf	main@minutos_unidade,w,c
   269  007E22  6ED9               	movwf	fsr2l,c
   270  007E24  3418               	rlcf	main@minutos_unidade+1,w,c
   271  007E26  6EDA               	movwf	fsr2h,c
   272  007E28  0E1D               	movlw	low _byte7seg
   273  007E2A  26D9               	addwf	fsr2l,f,c
   274  007E2C  0E00               	movlw	high _byte7seg
   275  007E2E  22DA               	addwfc	fsr2h,f,c
   276  007E30  CFDE F003          	movff	postinc2,setTimer@minutos_unidade
   277  007E34  CFDD F004          	movff	postdec2,setTimer@minutos_unidade+1
   278  007E38  90D8               	bcf	status,0,c
   279  007E3A  3419               	rlcf	main@segundos_dezena,w,c
   280  007E3C  6ED9               	movwf	fsr2l,c
   281  007E3E  341A               	rlcf	main@segundos_dezena+1,w,c
   282  007E40  6EDA               	movwf	fsr2h,c
   283  007E42  0E1D               	movlw	low _byte7seg
   284  007E44  26D9               	addwf	fsr2l,f,c
   285  007E46  0E00               	movlw	high _byte7seg
   286  007E48  22DA               	addwfc	fsr2h,f,c
   287  007E4A  CFDE F005          	movff	postinc2,setTimer@segundos_dezena
   288  007E4E  CFDD F006          	movff	postdec2,setTimer@segundos_dezena+1
   289  007E52  90D8               	bcf	status,0,c
   290  007E54  341B               	rlcf	main@i,w,c
   291  007E56  6ED9               	movwf	fsr2l,c
   292  007E58  341C               	rlcf	main@i+1,w,c
   293  007E5A  6EDA               	movwf	fsr2h,c
   294  007E5C  0E1D               	movlw	low _byte7seg
   295  007E5E  26D9               	addwf	fsr2l,f,c
   296  007E60  0E00               	movlw	high _byte7seg
   297  007E62  22DA               	addwfc	fsr2h,f,c
   298  007E64  CFDE F007          	movff	postinc2,setTimer@segundos_unidade
   299  007E68  CFDD F008          	movff	postdec2,setTimer@segundos_unidade+1
   300  007E6C  EC69  F03F         	call	_setTimer	;wreg free
   301                           
   302                           ;main.c: 44:             _delay((unsigned long)((10)*(8000000/4000.0)));
   303  007E70  0E1A               	movlw	26
   304  007E72  6E14               	movwf	??_main& (0+255),c
   305  007E74  0EF8               	movlw	248
   306  007E76                     u297:
   307  007E76  2EE8               	decfsz	wreg,f,c
   308  007E78  D7FE               	bra	u297
   309  007E7A  2E14               	decfsz	??_main& (0+255),f,c
   310  007E7C  D7FC               	bra	u297
   311  007E7E  D000               	nop2	
   312                           
   313                           ;main.c: 45:         }
   314  007E80  4A1B               	infsnz	main@i,f,c
   315  007E82  2A1C               	incf	main@i+1,f,c
   316  007E84  BE1C               	btfsc	main@i+1,7,c
   317  007E86  D7BE               	goto	l962
   318  007E88  501C               	movf	main@i+1,w,c
   319  007E8A  E104               	bnz	u260
   320  007E8C  0E0A               	movlw	10
   321  007E8E  5C1B               	subwf	main@i,w,c
   322  007E90  A0D8               	btfss	status,0,c
   323  007E92  D7B8               	goto	l962
   324  007E94                     u260:
   325                           
   326                           ;main.c: 46:         segundos_dezena++;
   327  007E94  4A19               	infsnz	main@segundos_dezena,f,c
   328  007E96  2A1A               	incf	main@segundos_dezena+1,f,c
   329                           
   330                           ;main.c: 47:         if(segundos_dezena > 5) {
   331  007E98  BE1A               	btfsc	main@segundos_dezena+1,7,c
   332  007E9A  D7B0               	goto	l956
   333  007E9C  501A               	movf	main@segundos_dezena+1,w,c
   334  007E9E  E104               	bnz	u270
   335  007EA0  0E06               	movlw	6
   336  007EA2  5C19               	subwf	main@segundos_dezena,w,c
   337  007EA4  A0D8               	btfss	status,0,c
   338  007EA6  D7AA               	goto	l956
   339  007EA8                     u270:
   340                           
   341                           ;main.c: 48:             segundos_dezena = 0;
   342  007EA8  0E00               	movlw	0
   343  007EAA  6E1A               	movwf	main@segundos_dezena+1,c
   344  007EAC  0E00               	movlw	0
   345  007EAE  6E19               	movwf	main@segundos_dezena,c
   346                           
   347                           ;main.c: 49:             minutos_unidade++;
   348  007EB0  4A17               	infsnz	main@minutos_unidade,f,c
   349  007EB2  2A18               	incf	main@minutos_unidade+1,f,c
   350                           
   351                           ;main.c: 50:             if(minutos_unidade > 9) {
   352  007EB4  BE18               	btfsc	main@minutos_unidade+1,7,c
   353  007EB6  D7A2               	goto	l956
   354  007EB8  5018               	movf	main@minutos_unidade+1,w,c
   355  007EBA  E104               	bnz	u280
   356  007EBC  0E0A               	movlw	10
   357  007EBE  5C17               	subwf	main@minutos_unidade,w,c
   358  007EC0  A0D8               	btfss	status,0,c
   359  007EC2  D79C               	goto	l956
   360  007EC4                     u280:
   361                           
   362                           ;main.c: 51:                 minutos_unidade = 0;
   363  007EC4  0E00               	movlw	0
   364  007EC6  6E18               	movwf	main@minutos_unidade+1,c
   365  007EC8  0E00               	movlw	0
   366  007ECA  6E17               	movwf	main@minutos_unidade,c
   367                           
   368                           ;main.c: 52:                 minutos_dezena++;
   369  007ECC  4A15               	infsnz	main@minutos_dezena,f,c
   370  007ECE  2A16               	incf	main@minutos_dezena+1,f,c
   371  007ED0  D795               	goto	l956
   372  007ED2                     __end_of_main:
   373                           	opt callstack 0
   374                           
   375 ;; *************** function _setup *****************
   376 ;; Defined at:
   377 ;;		line 111 in file "main.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;		None
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, status,2
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   391 ;;      Params:         0       0       0       0       0       0       0       0       0
   392 ;;      Locals:         0       0       0       0       0       0       0       0       0
   393 ;;      Temps:          0       0       0       0       0       0       0       0       0
   394 ;;      Totals:         0       0       0       0       0       0       0       0       0
   395 ;;Total ram usage:        0 bytes
   396 ;; Hardware stack levels used:    1
   397 ;; This function calls:
   398 ;;		Nothing
   399 ;; This function is called by:
   400 ;;		_main
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           
   404                           	psect	text1
   405  007D7C                     __ptext1:
   406                           	opt callstack 0
   407  007D7C                     _setup:
   408                           	opt callstack 30
   409                           
   410                           ;main.c: 112:     TRISD = 0x00;
   411                           
   412                           ;incstack = 0
   413  007D7C  0E00               	movlw	0
   414  007D7E  6E95               	movwf	3989,c	;volatile
   415  007D80  0012               	return		;funcret
   416  007D82                     __end_of_setup:
   417                           	opt callstack 0
   418                           
   419 ;; *************** function _setTimer *****************
   420 ;; Defined at:
   421 ;;		line 59 in file "main.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;  minutos_deze    2    0[COMRAM] int 
   424 ;;  minutos_unid    2    2[COMRAM] int 
   425 ;;  segundos_dez    2    4[COMRAM] int 
   426 ;;  segundos_uni    2    6[COMRAM] int 
   427 ;; Auto vars:     Size  Location     Type
   428 ;;  i               2   17[COMRAM] int 
   429 ;;  i               2   15[COMRAM] int 
   430 ;;  i               2   13[COMRAM] int 
   431 ;;  i               2   11[COMRAM] int 
   432 ;; Return value:  Size  Location     Type
   433 ;;                  1    wreg      void 
   434 ;; Registers used:
   435 ;;		wreg, status,2, status,0, cstack
   436 ;; Tracked objects:
   437 ;;		On entry : 0/0
   438 ;;		On exit  : 0/0
   439 ;;		Unchanged: 0/0
   440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   441 ;;      Params:         8       0       0       0       0       0       0       0       0
   442 ;;      Locals:         8       0       0       0       0       0       0       0       0
   443 ;;      Temps:          3       0       0       0       0       0       0       0       0
   444 ;;      Totals:        19       0       0       0       0       0       0       0       0
   445 ;;Total ram usage:       19 bytes
   446 ;; Hardware stack levels used:    1
   447 ;; Hardware stack levels required when called:    1
   448 ;; This function calls:
   449 ;;		_clock
   450 ;;		_key
   451 ;; This function is called by:
   452 ;;		_main
   453 ;; This function uses a non-reentrant model
   454 ;;
   455                           
   456                           	psect	text2
   457  007ED2                     __ptext2:
   458                           	opt callstack 0
   459  007ED2                     _setTimer:
   460                           	opt callstack 29
   461                           
   462                           ;main.c: 60:     for(int i = 0; i < 8; i++) {
   463                           
   464                           ;incstack = 0
   465  007ED2  0E00               	movlw	0
   466  007ED4  6E0D               	movwf	setTimer@i+1,c
   467  007ED6  0E00               	movlw	0
   468  007ED8  6E0C               	movwf	setTimer@i,c
   469  007EDA                     l896:
   470                           
   471                           ;main.c: 61:         LATDbits.LATD1 = (minutos_dezena >> i) & 0x01;
   472  007EDA  C00C  F009         	movff	setTimer@i,??_setTimer
   473  007EDE  C001  F00A         	movff	setTimer@minutos_dezena,??_setTimer+1
   474  007EE2  C002  F00B         	movff	setTimer@minutos_dezena+1,??_setTimer+2
   475  007EE6  2A09               	incf	??_setTimer,f,c
   476  007EE8  D003               	goto	u184
   477  007EEA                     u185:
   478  007EEA  340B               	rlcf	??_setTimer+2,w,c
   479  007EEC  320B               	rrcf	??_setTimer+2,f,c
   480  007EEE  320A               	rrcf	??_setTimer+1,f,c
   481  007EF0                     u184:
   482  007EF0  2E09               	decfsz	??_setTimer,f,c
   483  007EF2  D7FB               	goto	u185
   484  007EF4  0E01               	movlw	1
   485  007EF6  160A               	andwf	??_setTimer+1,f,c
   486  007EF8  460A               	rlncf	??_setTimer+1,f,c
   487  007EFA  508C               	movf	3980,w,c	;volatile
   488  007EFC  180A               	xorwf	??_setTimer+1,w,c
   489  007EFE  0BFD               	andlw	-3
   490  007F00  180A               	xorwf	??_setTimer+1,w,c
   491  007F02  6E8C               	movwf	3980,c	;volatile
   492                           
   493                           ;main.c: 62:         clock();
   494  007F04  ECD2  F03E         	call	_clock	;wreg free
   495                           
   496                           ;main.c: 63:     }
   497  007F08  4A0C               	infsnz	setTimer@i,f,c
   498  007F0A  2A0D               	incf	setTimer@i+1,f,c
   499  007F0C  BE0D               	btfsc	setTimer@i+1,7,c
   500  007F0E  D7E5               	goto	l896
   501  007F10  500D               	movf	setTimer@i+1,w,c
   502  007F12  E104               	bnz	u190
   503  007F14  0E08               	movlw	8
   504  007F16  5C0C               	subwf	setTimer@i,w,c
   505  007F18  A0D8               	btfss	status,0,c
   506  007F1A  D7DF               	goto	l896
   507  007F1C                     u190:
   508                           
   509                           ;main.c: 64:     for(int i = 0; i < 8; i++) {
   510  007F1C  0E00               	movlw	0
   511  007F1E  6E0F               	movwf	setTimer@i_115+1,c
   512  007F20  0E00               	movlw	0
   513  007F22  6E0E               	movwf	setTimer@i_115,c
   514  007F24                     l910:
   515                           
   516                           ;main.c: 65:         LATDbits.LATD1 = (minutos_unidade >> i) & 0x01;
   517  007F24  C00E  F009         	movff	setTimer@i_115,??_setTimer
   518  007F28  C003  F00A         	movff	setTimer@minutos_unidade,??_setTimer+1
   519  007F2C  C004  F00B         	movff	setTimer@minutos_unidade+1,??_setTimer+2
   520  007F30  2A09               	incf	??_setTimer,f,c
   521  007F32  D003               	goto	u204
   522  007F34                     u205:
   523  007F34  340B               	rlcf	??_setTimer+2,w,c
   524  007F36  320B               	rrcf	??_setTimer+2,f,c
   525  007F38  320A               	rrcf	??_setTimer+1,f,c
   526  007F3A                     u204:
   527  007F3A  2E09               	decfsz	??_setTimer,f,c
   528  007F3C  D7FB               	goto	u205
   529  007F3E  0E01               	movlw	1
   530  007F40  160A               	andwf	??_setTimer+1,f,c
   531  007F42  460A               	rlncf	??_setTimer+1,f,c
   532  007F44  508C               	movf	3980,w,c	;volatile
   533  007F46  180A               	xorwf	??_setTimer+1,w,c
   534  007F48  0BFD               	andlw	-3
   535  007F4A  180A               	xorwf	??_setTimer+1,w,c
   536  007F4C  6E8C               	movwf	3980,c	;volatile
   537                           
   538                           ;main.c: 66:         clock();
   539  007F4E  ECD2  F03E         	call	_clock	;wreg free
   540                           
   541                           ;main.c: 67:     }for(int i = 0; i < 8; i++) {
   542  007F52  4A0E               	infsnz	setTimer@i_115,f,c
   543  007F54  2A0F               	incf	setTimer@i_115+1,f,c
   544  007F56  BE0F               	btfsc	setTimer@i_115+1,7,c
   545  007F58  D7E5               	goto	l910
   546  007F5A  500F               	movf	setTimer@i_115+1,w,c
   547  007F5C  E104               	bnz	u210
   548  007F5E  0E08               	movlw	8
   549  007F60  5C0E               	subwf	setTimer@i_115,w,c
   550  007F62  A0D8               	btfss	status,0,c
   551  007F64  D7DF               	goto	l910
   552  007F66                     u210:
   553  007F66  0E00               	movlw	0
   554  007F68  6E11               	movwf	setTimer@i_116+1,c
   555  007F6A  0E00               	movlw	0
   556  007F6C  6E10               	movwf	setTimer@i_116,c
   557  007F6E                     l924:
   558                           
   559                           ;main.c: 68:         LATDbits.LATD1 = (segundos_dezena >> i) & 0x01;
   560  007F6E  C010  F009         	movff	setTimer@i_116,??_setTimer
   561  007F72  C005  F00A         	movff	setTimer@segundos_dezena,??_setTimer+1
   562  007F76  C006  F00B         	movff	setTimer@segundos_dezena+1,??_setTimer+2
   563  007F7A  2A09               	incf	??_setTimer,f,c
   564  007F7C  D003               	goto	u224
   565  007F7E                     u225:
   566  007F7E  340B               	rlcf	??_setTimer+2,w,c
   567  007F80  320B               	rrcf	??_setTimer+2,f,c
   568  007F82  320A               	rrcf	??_setTimer+1,f,c
   569  007F84                     u224:
   570  007F84  2E09               	decfsz	??_setTimer,f,c
   571  007F86  D7FB               	goto	u225
   572  007F88  0E01               	movlw	1
   573  007F8A  160A               	andwf	??_setTimer+1,f,c
   574  007F8C  460A               	rlncf	??_setTimer+1,f,c
   575  007F8E  508C               	movf	3980,w,c	;volatile
   576  007F90  180A               	xorwf	??_setTimer+1,w,c
   577  007F92  0BFD               	andlw	-3
   578  007F94  180A               	xorwf	??_setTimer+1,w,c
   579  007F96  6E8C               	movwf	3980,c	;volatile
   580                           
   581                           ;main.c: 69:         clock();
   582  007F98  ECD2  F03E         	call	_clock	;wreg free
   583                           
   584                           ;main.c: 70:     }
   585  007F9C  4A10               	infsnz	setTimer@i_116,f,c
   586  007F9E  2A11               	incf	setTimer@i_116+1,f,c
   587  007FA0  BE11               	btfsc	setTimer@i_116+1,7,c
   588  007FA2  D7E5               	goto	l924
   589  007FA4  5011               	movf	setTimer@i_116+1,w,c
   590  007FA6  E104               	bnz	u230
   591  007FA8  0E08               	movlw	8
   592  007FAA  5C10               	subwf	setTimer@i_116,w,c
   593  007FAC  A0D8               	btfss	status,0,c
   594  007FAE  D7DF               	goto	l924
   595  007FB0                     u230:
   596                           
   597                           ;main.c: 71:     for(int i = 0; i < 8; i++) {
   598  007FB0  0E00               	movlw	0
   599  007FB2  6E13               	movwf	setTimer@i_117+1,c
   600  007FB4  0E00               	movlw	0
   601  007FB6  6E12               	movwf	setTimer@i_117,c
   602  007FB8                     l938:
   603                           
   604                           ;main.c: 72:         LATDbits.LATD1 = (segundos_unidade >> i) & 0x01;
   605  007FB8  C012  F009         	movff	setTimer@i_117,??_setTimer
   606  007FBC  C007  F00A         	movff	setTimer@segundos_unidade,??_setTimer+1
   607  007FC0  C008  F00B         	movff	setTimer@segundos_unidade+1,??_setTimer+2
   608  007FC4  2A09               	incf	??_setTimer,f,c
   609  007FC6  D003               	goto	u244
   610  007FC8                     u245:
   611  007FC8  340B               	rlcf	??_setTimer+2,w,c
   612  007FCA  320B               	rrcf	??_setTimer+2,f,c
   613  007FCC  320A               	rrcf	??_setTimer+1,f,c
   614  007FCE                     u244:
   615  007FCE  2E09               	decfsz	??_setTimer,f,c
   616  007FD0  D7FB               	goto	u245
   617  007FD2  0E01               	movlw	1
   618  007FD4  160A               	andwf	??_setTimer+1,f,c
   619  007FD6  460A               	rlncf	??_setTimer+1,f,c
   620  007FD8  508C               	movf	3980,w,c	;volatile
   621  007FDA  180A               	xorwf	??_setTimer+1,w,c
   622  007FDC  0BFD               	andlw	-3
   623  007FDE  180A               	xorwf	??_setTimer+1,w,c
   624  007FE0  6E8C               	movwf	3980,c	;volatile
   625                           
   626                           ;main.c: 73:         clock();
   627  007FE2  ECD2  F03E         	call	_clock	;wreg free
   628                           
   629                           ;main.c: 74:     }
   630  007FE6  4A12               	infsnz	setTimer@i_117,f,c
   631  007FE8  2A13               	incf	setTimer@i_117+1,f,c
   632  007FEA  BE13               	btfsc	setTimer@i_117+1,7,c
   633  007FEC  D7E5               	goto	l938
   634  007FEE  5013               	movf	setTimer@i_117+1,w,c
   635  007FF0  E104               	bnz	u250
   636  007FF2  0E08               	movlw	8
   637  007FF4  5C12               	subwf	setTimer@i_117,w,c
   638  007FF6  A0D8               	btfss	status,0,c
   639  007FF8  D7DF               	goto	l938
   640  007FFA                     u250:
   641                           
   642                           ;main.c: 75:     key();
   643  007FFA  ECC1  F03E         	call	_key	;wreg free
   644  007FFE  0012               	return		;funcret
   645  008000                     __end_of_setTimer:
   646                           	opt callstack 0
   647                           
   648 ;; *************** function _key *****************
   649 ;; Defined at:
   650 ;;		line 105 in file "main.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   664 ;;      Params:         0       0       0       0       0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0       0       0       0       0
   666 ;;      Temps:          0       0       0       0       0       0       0       0       0
   667 ;;      Totals:         0       0       0       0       0       0       0       0       0
   668 ;;Total ram usage:        0 bytes
   669 ;; Hardware stack levels used:    1
   670 ;; This function calls:
   671 ;;		Nothing
   672 ;; This function is called by:
   673 ;;		_setTimer
   674 ;;		_sendDualData
   675 ;;		_sendData
   676 ;; This function uses a non-reentrant model
   677 ;;
   678                           
   679                           	psect	text3
   680  007D82                     __ptext3:
   681                           	opt callstack 0
   682  007D82                     _key:
   683                           	opt callstack 29
   684                           
   685                           ;main.c: 106:     LATDbits.LATD2 = 1;
   686                           
   687                           ;incstack = 0
   688  007D82  848C               	bsf	3980,2,c	;volatile
   689                           
   690                           ;main.c: 107:     _delay((unsigned long)((500)*(8000000/4000000.0)));
   691  007D84  0EC8               	movlw	200
   692  007D86                     u307:
   693  007D86  D000               	nop2	
   694  007D88  2EE8               	decfsz	wreg,f,c
   695  007D8A  D7FD               	bra	u307
   696                           
   697                           ;main.c: 108:     LATDbits.LATD2 = 0;
   698  007D8C  948C               	bcf	3980,2,c	;volatile
   699  007D8E  0012               	return		;funcret
   700  007D90                     __end_of_key:
   701                           	opt callstack 0
   702                           
   703 ;; *************** function _clock *****************
   704 ;; Defined at:
   705 ;;		line 98 in file "main.c"
   706 ;; Parameters:    Size  Location     Type
   707 ;;		None
   708 ;; Auto vars:     Size  Location     Type
   709 ;;		None
   710 ;; Return value:  Size  Location     Type
   711 ;;                  1    wreg      void 
   712 ;; Registers used:
   713 ;;		wreg
   714 ;; Tracked objects:
   715 ;;		On entry : 0/0
   716 ;;		On exit  : 0/0
   717 ;;		Unchanged: 0/0
   718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   719 ;;      Params:         0       0       0       0       0       0       0       0       0
   720 ;;      Locals:         0       0       0       0       0       0       0       0       0
   721 ;;      Temps:          0       0       0       0       0       0       0       0       0
   722 ;;      Totals:         0       0       0       0       0       0       0       0       0
   723 ;;Total ram usage:        0 bytes
   724 ;; Hardware stack levels used:    1
   725 ;; This function calls:
   726 ;;		Nothing
   727 ;; This function is called by:
   728 ;;		_setTimer
   729 ;;		_sendDualData
   730 ;;		_sendData
   731 ;; This function uses a non-reentrant model
   732 ;;
   733                           
   734                           	psect	text4
   735  007DA4                     __ptext4:
   736                           	opt callstack 0
   737  007DA4                     _clock:
   738                           	opt callstack 29
   739                           
   740                           ;main.c: 99:     LATDbits.LATD0 = 1;
   741                           
   742                           ;incstack = 0
   743  007DA4  808C               	bsf	3980,0,c	;volatile
   744                           
   745                           ;main.c: 100:     _delay((unsigned long)((500)*(8000000/4000000.0)));
   746  007DA6  0EC8               	movlw	200
   747  007DA8                     u317:
   748  007DA8  D000               	nop2	
   749  007DAA  2EE8               	decfsz	wreg,f,c
   750  007DAC  D7FD               	bra	u317
   751                           
   752                           ;main.c: 101:     LATDbits.LATD0 = 0;
   753  007DAE  908C               	bcf	3980,0,c	;volatile
   754                           
   755                           ;main.c: 102:     _delay((unsigned long)((500)*(8000000/4000000.0)));
   756  007DB0  0EC8               	movlw	200
   757  007DB2                     u327:
   758  007DB2  D000               	nop2	
   759  007DB4  2EE8               	decfsz	wreg,f,c
   760  007DB6  D7FD               	bra	u327
   761  007DB8  0012               	return		;funcret
   762  007DBA                     __end_of_clock:
   763                           	opt callstack 0
   764  0000                     
   765                           	psect	rparam
   766  0000                     tosu	equ	0xFFF
   767                           tosh	equ	0xFFE
   768                           tosl	equ	0xFFD
   769                           stkptr	equ	0xFFC
   770                           pclatu	equ	0xFFB
   771                           pclath	equ	0xFFA
   772                           pcl	equ	0xFF9
   773                           tblptru	equ	0xFF8
   774                           tblptrh	equ	0xFF7
   775                           tblptrl	equ	0xFF6
   776                           tablat	equ	0xFF5
   777                           prodh	equ	0xFF4
   778                           prodl	equ	0xFF3
   779                           indf0	equ	0xFEF
   780                           postinc0	equ	0xFEE
   781                           postdec0	equ	0xFED
   782                           preinc0	equ	0xFEC
   783                           plusw0	equ	0xFEB
   784                           fsr0h	equ	0xFEA
   785                           fsr0l	equ	0xFE9
   786                           wreg	equ	0xFE8
   787                           indf1	equ	0xFE7
   788                           postinc1	equ	0xFE6
   789                           postdec1	equ	0xFE5
   790                           preinc1	equ	0xFE4
   791                           plusw1	equ	0xFE3
   792                           fsr1h	equ	0xFE2
   793                           fsr1l	equ	0xFE1
   794                           bsr	equ	0xFE0
   795                           indf2	equ	0xFDF
   796                           postinc2	equ	0xFDE
   797                           postdec2	equ	0xFDD
   798                           preinc2	equ	0xFDC
   799                           plusw2	equ	0xFDB
   800                           fsr2h	equ	0xFDA
   801                           fsr2l	equ	0xFD9
   802                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     28      48
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_setTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     9      0     850
                                             19 COMRAM     9     9      0
                           _setTimer
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setTimer                                            19    11      8     664
                                              0 COMRAM    19    11      8
                              _clock
                                _key
 ---------------------------------------------------------------------------------
 (2) _key                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clock                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setTimer
     _clock
     _key
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     1C      30       1       50.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      30      20        0.0%
DATA                 0      0      30       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sat May 25 14:18:51 2019

                     l910 7F24                       l924 7F6E                       l938 7FB8  
                     l962 7E04                       l956 7DFC                       l896 7EDA  
                     u210 7F66                       u204 7F3A                       u205 7F34  
                     u230 7FB0                       u224 7F84                       u225 7F7E  
                     u250 7FFA                       u307 7D86                       u244 7FCE  
                     u260 7E94                       u317 7DA8                       u245 7FC8  
                     u190 7F1C                       u270 7EA8                       u327 7DB2  
                     u184 7EF0                       u280 7EC4                       u185 7EEA  
                     u297 7E76                       _key 7D82                       wreg 000FE8  
                    ?_key 0001                      _main 7DE0                      fsr2h 000FDA  
                    fsr1l 000FE1                      fsr2l 000FD9                      start 0000  
            ___param_bank 000000                     ??_key 0001                     ?_main 0001  
                   _TRISD 000F95                     _clock 7DA4                     _setup 7D7C  
                   main@i 001B                     tablat 000FF5                     status 000FD8  
         __initialization 7DBA              __end_of_main 7ED2                    ??_main 0014  
           __activetblptr 000000                    ?_clock 0001                    ?_setup 0001  
        __end_of_setTimer 8000              __pdataCOMRAM 001D                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8                __accesstop 0060  
 __end_of__initialization 7DDA             ___rparam_used 000001            __pcstackCOMRAM 0001  
 setTimer@segundos_dezena 0005             __end_of_clock 7DBA             __end_of_setup 7D82  
                 ??_clock 0001                   ??_setup 0001       main@minutos_unidade 0017  
                 __Hparam 0000                 ?_setTimer 0001                   __Lparam 0000  
                 __pcinit 7DBA                   __ramtop 0800                   __ptext0 7DE0  
                 __ptext1 7D7C                   __ptext2 7ED2                   __ptext3 7D82  
                 __ptext4 7DA4              __size_of_key 000E      end_of_initialization 7DDA  
              ??_setTimer 0009                   postdec1 000FE5                   postdec2 000FDD  
                 postinc0 000FEE                   postinc2 000FDE             setTimer@i_115 000E  
           setTimer@i_116 0010             setTimer@i_117 0012             __pidataCOMRAM 7D90  
     start_initialization 7DBA  setTimer@segundos_unidade 0007               __end_of_key 7D90  
      main@minutos_dezena 0015         __size_of_setTimer 012E            __size_of_clock 0016  
          __size_of_setup 0006                  _LATDbits 000F8C       main@segundos_dezena 0019  
               copy_data0 7DCE                  __Hrparam 0000                  __Lrparam 0000  
               setTimer@i 000C                  _byte7seg 001D             __size_of_main 00F2  
 setTimer@minutos_unidade 0003                  _setTimer 7ED2    setTimer@minutos_dezena 0001  
