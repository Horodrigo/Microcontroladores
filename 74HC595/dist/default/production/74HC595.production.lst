

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Sun May 26 16:25:34 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17  0000                     
    18                           ; Version 2.05
    19                           ; Generated 20/12/2018 GMT
    20                           ; 
    21                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F4550 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     
    53                           	psect	idataCOMRAM
    54  007CE4                     __pidataCOMRAM:
    55                           	opt callstack 0
    56                           
    57                           ;initializer for _byte7seg
    58  007CE4  00FC               	dw	252
    59  007CE6  0060               	dw	96
    60  007CE8  00DA               	dw	218
    61  007CEA  00F2               	dw	242
    62  007CEC  0066               	dw	102
    63  007CEE  00B6               	dw	182
    64  007CF0  00BE               	dw	190
    65  007CF2  00E0               	dw	224
    66  007CF4  00FE               	dw	254
    67  007CF6  00F6               	dw	246
    68  0000                     _TRISD	set	3989
    69  0000                     _ADCON1	set	4033
    70  0000                     _LATDbits	set	3980
    71  0000                     _PORTDbits	set	3971
    72                           
    73                           ; #config settings
    74                           
    75                           	psect	cinit
    76  007D0E                     __pcinit:
    77                           	opt callstack 0
    78  007D0E                     start_initialization:
    79                           	opt callstack 0
    80  007D0E                     __initialization:
    81                           	opt callstack 0
    82                           
    83                           ; Initialize objects allocated to COMRAM (20 bytes)
    84                           ; load TBLPTR registers with __pidataCOMRAM
    85  007D0E  0EE4               	movlw	low __pidataCOMRAM
    86  007D10  6EF6               	movwf	tblptrl,c
    87  007D12  0E7C               	movlw	high __pidataCOMRAM
    88  007D14  6EF7               	movwf	tblptrh,c
    89  007D16  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
    90  007D18  6EF8               	movwf	tblptru,c
    91  007D1A  EE00  F021         	lfsr	0,__pdataCOMRAM
    92  007D1E  EE10 F014          	lfsr	1,20
    93  007D22                     copy_data0:
    94  007D22  0009               	tblrd		*+
    95  007D24  CFF5 FFEE          	movff	tablat,postinc0
    96  007D28  50E5               	movf	postdec1,w,c
    97  007D2A  50E1               	movf	fsr1l,w,c
    98  007D2C  E1FA               	bnz	copy_data0
    99  007D2E                     end_of_initialization:
   100                           	opt callstack 0
   101  007D2E                     __end_of__initialization:
   102                           	opt callstack 0
   103  007D2E  0100               	movlb	0
   104  007D30  EF57  F03F         	goto	_main	;jump to C main() function
   105                           
   106                           	psect	dataCOMRAM
   107  000021                     __pdataCOMRAM:
   108                           	opt callstack 0
   109  000021                     _byte7seg:
   110                           	opt callstack 0
   111  000021                     	ds	20
   112                           
   113                           	psect	cstackCOMRAM
   114  000001                     __pcstackCOMRAM:
   115                           	opt callstack 0
   116  000001                     setTimer@minutos_dezena:
   117                           	opt callstack 0
   118  000001                     sendData@data:
   119                           	opt callstack 0
   120                           
   121                           ; 2 bytes @ 0x0
   122  000001                     	ds	2
   123  000003                     ??_sendData:
   124  000003                     setTimer@minutos_unidade:
   125                           	opt callstack 0
   126                           
   127                           ; 2 bytes @ 0x2
   128  000003                     	ds	2
   129  000005                     setTimer@segundos_dezena:
   130                           	opt callstack 0
   131                           
   132                           ; 2 bytes @ 0x4
   133  000005                     	ds	1
   134  000006                     sendData@i:
   135                           	opt callstack 0
   136                           
   137                           ; 2 bytes @ 0x5
   138  000006                     	ds	1
   139  000007                     setTimer@segundos_unidade:
   140                           	opt callstack 0
   141                           
   142                           ; 2 bytes @ 0x6
   143  000007                     	ds	2
   144  000009                     ??_setTimer:
   145                           
   146                           ; 1 bytes @ 0x8
   147  000009                     	ds	3
   148  00000C                     setTimer@i:
   149                           	opt callstack 0
   150                           
   151                           ; 2 bytes @ 0xB
   152  00000C                     	ds	2
   153  00000E                     setTimer@i_178:
   154                           	opt callstack 0
   155                           
   156                           ; 2 bytes @ 0xD
   157  00000E                     	ds	2
   158  000010                     setTimer@i_179:
   159                           	opt callstack 0
   160                           
   161                           ; 2 bytes @ 0xF
   162  000010                     	ds	2
   163  000012                     setTimer@i_180:
   164                           	opt callstack 0
   165                           
   166                           ; 2 bytes @ 0x11
   167  000012                     	ds	2
   168  000014                     ??_main:
   169                           
   170                           ; 1 bytes @ 0x13
   171  000014                     	ds	1
   172  000015                     main@minutos_dezena:
   173                           	opt callstack 0
   174                           
   175                           ; 2 bytes @ 0x14
   176  000015                     	ds	2
   177  000017                     main@pontos1:
   178                           	opt callstack 0
   179                           
   180                           ; 2 bytes @ 0x16
   181  000017                     	ds	2
   182  000019                     main@pontos2:
   183                           	opt callstack 0
   184                           
   185                           ; 2 bytes @ 0x18
   186  000019                     	ds	2
   187  00001B                     main@minutos_unidade:
   188                           	opt callstack 0
   189                           
   190                           ; 2 bytes @ 0x1A
   191  00001B                     	ds	2
   192  00001D                     main@segundos_dezena:
   193                           	opt callstack 0
   194                           
   195                           ; 2 bytes @ 0x1C
   196  00001D                     	ds	2
   197  00001F                     main@i:
   198                           	opt callstack 0
   199                           
   200                           ; 2 bytes @ 0x1E
   201  00001F                     	ds	2
   202                           
   203 ;;
   204 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   205 ;;
   206 ;; *************** function _main *****************
   207 ;; Defined at:
   208 ;;		line 38 in file "main.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;		None
   211 ;; Auto vars:     Size  Location     Type
   212 ;;  i               2   30[COMRAM] int 
   213 ;;  segundos_dez    2   28[COMRAM] int 
   214 ;;  minutos_unid    2   26[COMRAM] int 
   215 ;;  pontos2         2   24[COMRAM] int 
   216 ;;  pontos1         2   22[COMRAM] int 
   217 ;;  minutos_deze    2   20[COMRAM] int 
   218 ;; Return value:  Size  Location     Type
   219 ;;                  1    wreg      void 
   220 ;; Registers used:
   221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   222 ;; Tracked objects:
   223 ;;		On entry : 0/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   227 ;;      Params:         0       0       0       0       0       0       0       0       0
   228 ;;      Locals:        12       0       0       0       0       0       0       0       0
   229 ;;      Temps:          1       0       0       0       0       0       0       0       0
   230 ;;      Totals:        13       0       0       0       0       0       0       0       0
   231 ;;Total ram usage:       13 bytes
   232 ;; Hardware stack levels required when called:    2
   233 ;; This function calls:
   234 ;;		_key
   235 ;;		_sendData
   236 ;;		_setTimer
   237 ;;		_setup
   238 ;; This function is called by:
   239 ;;		Startup code after reset
   240 ;; This function uses a non-reentrant model
   241 ;;
   242                           
   243                           	psect	text0
   244  007EAE                     __ptext0:
   245                           	opt callstack 0
   246  007EAE                     _main:
   247                           	opt callstack 29
   248                           
   249                           ;main.c: 39:     setup();
   250                           
   251                           ;incstack = 0
   252  007EAE  EC66  F03E         	call	_setup	;wreg free
   253                           
   254                           ;main.c: 40:     int minutos_dezena = 0;
   255  007EB2  0E00               	movlw	0
   256  007EB4  6E16               	movwf	main@minutos_dezena+1,c
   257  007EB6  0E00               	movlw	0
   258  007EB8  6E15               	movwf	main@minutos_dezena,c
   259                           
   260                           ;main.c: 41:     int minutos_unidade = 0;
   261  007EBA  0E00               	movlw	0
   262  007EBC  6E1C               	movwf	main@minutos_unidade+1,c
   263  007EBE  0E00               	movlw	0
   264  007EC0  6E1B               	movwf	main@minutos_unidade,c
   265                           
   266                           ;main.c: 42:     int segundos_dezena = 0;
   267  007EC2  0E00               	movlw	0
   268  007EC4  6E1E               	movwf	main@segundos_dezena+1,c
   269  007EC6  0E00               	movlw	0
   270  007EC8  6E1D               	movwf	main@segundos_dezena,c
   271                           
   272                           ;main.c: 43:     int pontos1 = 0;
   273  007ECA  0E00               	movlw	0
   274  007ECC  6E18               	movwf	main@pontos1+1,c
   275  007ECE  0E00               	movlw	0
   276  007ED0  6E17               	movwf	main@pontos1,c
   277                           
   278                           ;main.c: 44:     int pontos2 = 0;
   279  007ED2  0E00               	movlw	0
   280  007ED4  6E1A               	movwf	main@pontos2+1,c
   281  007ED6  0E00               	movlw	0
   282  007ED8  6E19               	movwf	main@pontos2,c
   283  007EDA                     l990:
   284                           
   285                           ;main.c: 46:         if(PORTDbits.RD3 == 1) {
   286  007EDA  A683               	btfss	3971,3,c	;volatile
   287  007EDC  D002               	goto	l994
   288                           
   289                           ;main.c: 47:             pontos1++;
   290  007EDE  4A17               	infsnz	main@pontos1,f,c
   291  007EE0  2A18               	incf	main@pontos1+1,f,c
   292  007EE2                     l994:
   293                           
   294                           ;main.c: 49:         if(PORTDbits.RD4 == 1) {
   295  007EE2  A883               	btfss	3971,4,c	;volatile
   296  007EE4  D002               	goto	l998
   297                           
   298                           ;main.c: 50:             pontos2++;
   299  007EE6  4A19               	infsnz	main@pontos2,f,c
   300  007EE8  2A1A               	incf	main@pontos2+1,f,c
   301  007EEA                     l998:
   302                           
   303                           ;main.c: 52:         for(int i = 0; i < 10; i++) {
   304  007EEA  0E00               	movlw	0
   305  007EEC  6E20               	movwf	main@i+1,c
   306  007EEE  0E00               	movlw	0
   307  007EF0  6E1F               	movwf	main@i,c
   308  007EF2                     l1004:
   309                           
   310                           ;main.c: 53:             sendData(byte7seg[pontos2]);
   311  007EF2  90D8               	bcf	status,0,c
   312  007EF4  3419               	rlcf	main@pontos2,w,c
   313  007EF6  6ED9               	movwf	fsr2l,c
   314  007EF8  341A               	rlcf	main@pontos2+1,w,c
   315  007EFA  6EDA               	movwf	fsr2h,c
   316  007EFC  0E21               	movlw	low _byte7seg
   317  007EFE  26D9               	addwf	fsr2l,f,c
   318  007F00  0E00               	movlw	high _byte7seg
   319  007F02  22DA               	addwfc	fsr2h,f,c
   320  007F04  CFDE F001          	movff	postinc2,sendData@data
   321  007F08  CFDD F002          	movff	postdec2,sendData@data+1
   322  007F0C  EC9A  F03E         	call	_sendData	;wreg free
   323                           
   324                           ;main.c: 54:             sendData(byte7seg[pontos1]);
   325  007F10  90D8               	bcf	status,0,c
   326  007F12  3417               	rlcf	main@pontos1,w,c
   327  007F14  6ED9               	movwf	fsr2l,c
   328  007F16  3418               	rlcf	main@pontos1+1,w,c
   329  007F18  6EDA               	movwf	fsr2h,c
   330  007F1A  0E21               	movlw	low _byte7seg
   331  007F1C  26D9               	addwf	fsr2l,f,c
   332  007F1E  0E00               	movlw	high _byte7seg
   333  007F20  22DA               	addwfc	fsr2h,f,c
   334  007F22  CFDE F001          	movff	postinc2,sendData@data
   335  007F26  CFDD F002          	movff	postdec2,sendData@data+1
   336  007F2A  EC9A  F03E         	call	_sendData	;wreg free
   337                           
   338                           ;main.c: 55:             setTimer(byte7seg[minutos_dezena], byte7seg[minutos_unidade], b
      +                          yte7seg[segundos_dezena], byte7seg[i]);
   339  007F2E  90D8               	bcf	status,0,c
   340  007F30  3415               	rlcf	main@minutos_dezena,w,c
   341  007F32  6ED9               	movwf	fsr2l,c
   342  007F34  3416               	rlcf	main@minutos_dezena+1,w,c
   343  007F36  6EDA               	movwf	fsr2h,c
   344  007F38  0E21               	movlw	low _byte7seg
   345  007F3A  26D9               	addwf	fsr2l,f,c
   346  007F3C  0E00               	movlw	high _byte7seg
   347  007F3E  22DA               	addwfc	fsr2h,f,c
   348  007F40  CFDE F001          	movff	postinc2,setTimer@minutos_dezena
   349  007F44  CFDD F002          	movff	postdec2,setTimer@minutos_dezena+1
   350  007F48  90D8               	bcf	status,0,c
   351  007F4A  341B               	rlcf	main@minutos_unidade,w,c
   352  007F4C  6ED9               	movwf	fsr2l,c
   353  007F4E  341C               	rlcf	main@minutos_unidade+1,w,c
   354  007F50  6EDA               	movwf	fsr2h,c
   355  007F52  0E21               	movlw	low _byte7seg
   356  007F54  26D9               	addwf	fsr2l,f,c
   357  007F56  0E00               	movlw	high _byte7seg
   358  007F58  22DA               	addwfc	fsr2h,f,c
   359  007F5A  CFDE F003          	movff	postinc2,setTimer@minutos_unidade
   360  007F5E  CFDD F004          	movff	postdec2,setTimer@minutos_unidade+1
   361  007F62  90D8               	bcf	status,0,c
   362  007F64  341D               	rlcf	main@segundos_dezena,w,c
   363  007F66  6ED9               	movwf	fsr2l,c
   364  007F68  341E               	rlcf	main@segundos_dezena+1,w,c
   365  007F6A  6EDA               	movwf	fsr2h,c
   366  007F6C  0E21               	movlw	low _byte7seg
   367  007F6E  26D9               	addwf	fsr2l,f,c
   368  007F70  0E00               	movlw	high _byte7seg
   369  007F72  22DA               	addwfc	fsr2h,f,c
   370  007F74  CFDE F005          	movff	postinc2,setTimer@segundos_dezena
   371  007F78  CFDD F006          	movff	postdec2,setTimer@segundos_dezena+1
   372  007F7C  90D8               	bcf	status,0,c
   373  007F7E  341F               	rlcf	main@i,w,c
   374  007F80  6ED9               	movwf	fsr2l,c
   375  007F82  3420               	rlcf	main@i+1,w,c
   376  007F84  6EDA               	movwf	fsr2h,c
   377  007F86  0E21               	movlw	low _byte7seg
   378  007F88  26D9               	addwf	fsr2l,f,c
   379  007F8A  0E00               	movlw	high _byte7seg
   380  007F8C  22DA               	addwfc	fsr2h,f,c
   381  007F8E  CFDE F007          	movff	postinc2,setTimer@segundos_unidade
   382  007F92  CFDD F008          	movff	postdec2,setTimer@segundos_unidade+1
   383  007F96  ECC1  F03E         	call	_setTimer	;wreg free
   384                           
   385                           ;main.c: 56:             key();
   386  007F9A  EC6B  F03E         	call	_key	;wreg free
   387                           
   388                           ;main.c: 57:             _delay((unsigned long)((10)*(8000000/4000.0)));
   389  007F9E  0E1A               	movlw	26
   390  007FA0  6E14               	movwf	??_main& (0+255),c
   391  007FA2  0EF8               	movlw	248
   392  007FA4                     u357:
   393  007FA4  2EE8               	decfsz	wreg,f,c
   394  007FA6  D7FE               	bra	u357
   395  007FA8  2E14               	decfsz	??_main& (0+255),f,c
   396  007FAA  D7FC               	bra	u357
   397  007FAC  D000               	nop2	
   398                           
   399                           ;main.c: 58:         }
   400  007FAE  4A1F               	infsnz	main@i,f,c
   401  007FB0  2A20               	incf	main@i+1,f,c
   402  007FB2  BE20               	btfsc	main@i+1,7,c
   403  007FB4  D79E               	goto	l1004
   404  007FB6  5020               	movf	main@i+1,w,c
   405  007FB8  E104               	bnz	u320
   406  007FBA  0E0A               	movlw	10
   407  007FBC  5C1F               	subwf	main@i,w,c
   408  007FBE  A0D8               	btfss	status,0,c
   409  007FC0  D798               	goto	l1004
   410  007FC2                     u320:
   411                           
   412                           ;main.c: 59:         segundos_dezena++;
   413  007FC2  4A1D               	infsnz	main@segundos_dezena,f,c
   414  007FC4  2A1E               	incf	main@segundos_dezena+1,f,c
   415                           
   416                           ;main.c: 60:         if(segundos_dezena > 5) {
   417  007FC6  BE1E               	btfsc	main@segundos_dezena+1,7,c
   418  007FC8  D788               	goto	l990
   419  007FCA  501E               	movf	main@segundos_dezena+1,w,c
   420  007FCC  E104               	bnz	u330
   421  007FCE  0E06               	movlw	6
   422  007FD0  5C1D               	subwf	main@segundos_dezena,w,c
   423  007FD2  A0D8               	btfss	status,0,c
   424  007FD4  D782               	goto	l990
   425  007FD6                     u330:
   426                           
   427                           ;main.c: 61:             segundos_dezena = 0;
   428  007FD6  0E00               	movlw	0
   429  007FD8  6E1E               	movwf	main@segundos_dezena+1,c
   430  007FDA  0E00               	movlw	0
   431  007FDC  6E1D               	movwf	main@segundos_dezena,c
   432                           
   433                           ;main.c: 62:             minutos_unidade++;
   434  007FDE  4A1B               	infsnz	main@minutos_unidade,f,c
   435  007FE0  2A1C               	incf	main@minutos_unidade+1,f,c
   436                           
   437                           ;main.c: 63:             if(minutos_unidade > 9) {
   438  007FE2  BE1C               	btfsc	main@minutos_unidade+1,7,c
   439  007FE4  D77A               	goto	l990
   440  007FE6  501C               	movf	main@minutos_unidade+1,w,c
   441  007FE8  E104               	bnz	u340
   442  007FEA  0E0A               	movlw	10
   443  007FEC  5C1B               	subwf	main@minutos_unidade,w,c
   444  007FEE  A0D8               	btfss	status,0,c
   445  007FF0  D774               	goto	l990
   446  007FF2                     u340:
   447                           
   448                           ;main.c: 64:                 minutos_unidade = 0;
   449  007FF2  0E00               	movlw	0
   450  007FF4  6E1C               	movwf	main@minutos_unidade+1,c
   451  007FF6  0E00               	movlw	0
   452  007FF8  6E1B               	movwf	main@minutos_unidade,c
   453                           
   454                           ;main.c: 65:                 minutos_dezena++;
   455  007FFA  4A15               	infsnz	main@minutos_dezena,f,c
   456  007FFC  2A16               	incf	main@minutos_dezena+1,f,c
   457  007FFE  D76D               	goto	l990
   458  008000                     __end_of_main:
   459                           	opt callstack 0
   460                           
   461 ;; *************** function _setup *****************
   462 ;; Defined at:
   463 ;;		line 124 in file "main.c"
   464 ;; Parameters:    Size  Location     Type
   465 ;;		None
   466 ;; Auto vars:     Size  Location     Type
   467 ;;		None
   468 ;; Return value:  Size  Location     Type
   469 ;;                  1    wreg      void 
   470 ;; Registers used:
   471 ;;		wreg, status,2
   472 ;; Tracked objects:
   473 ;;		On entry : 0/0
   474 ;;		On exit  : 0/0
   475 ;;		Unchanged: 0/0
   476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   477 ;;      Params:         0       0       0       0       0       0       0       0       0
   478 ;;      Locals:         0       0       0       0       0       0       0       0       0
   479 ;;      Temps:          0       0       0       0       0       0       0       0       0
   480 ;;      Totals:         0       0       0       0       0       0       0       0       0
   481 ;;Total ram usage:        0 bytes
   482 ;; Hardware stack levels used:    1
   483 ;; This function calls:
   484 ;;		Nothing
   485 ;; This function is called by:
   486 ;;		_main
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           	psect	text1
   491  007CCC                     __ptext1:
   492                           	opt callstack 0
   493  007CCC                     _setup:
   494                           	opt callstack 30
   495                           
   496                           ;main.c: 125:     ADCON1 = 0x0F;
   497                           
   498                           ;incstack = 0
   499  007CCC  0E0F               	movlw	15
   500  007CCE  6EC1               	movwf	4033,c	;volatile
   501                           
   502                           ;main.c: 126:     TRISD = 0b00011000;
   503  007CD0  0E18               	movlw	24
   504  007CD2  6E95               	movwf	3989,c	;volatile
   505  007CD4  0012               	return		;funcret
   506  007CD6                     __end_of_setup:
   507                           	opt callstack 0
   508                           
   509 ;; *************** function _setTimer *****************
   510 ;; Defined at:
   511 ;;		line 72 in file "main.c"
   512 ;; Parameters:    Size  Location     Type
   513 ;;  minutos_deze    2    0[COMRAM] int 
   514 ;;  minutos_unid    2    2[COMRAM] int 
   515 ;;  segundos_dez    2    4[COMRAM] int 
   516 ;;  segundos_uni    2    6[COMRAM] int 
   517 ;; Auto vars:     Size  Location     Type
   518 ;;  i               2   17[COMRAM] int 
   519 ;;  i               2   15[COMRAM] int 
   520 ;;  i               2   13[COMRAM] int 
   521 ;;  i               2   11[COMRAM] int 
   522 ;; Return value:  Size  Location     Type
   523 ;;                  1    wreg      void 
   524 ;; Registers used:
   525 ;;		wreg, status,2, status,0, cstack
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   531 ;;      Params:         8       0       0       0       0       0       0       0       0
   532 ;;      Locals:         8       0       0       0       0       0       0       0       0
   533 ;;      Temps:          3       0       0       0       0       0       0       0       0
   534 ;;      Totals:        19       0       0       0       0       0       0       0       0
   535 ;;Total ram usage:       19 bytes
   536 ;; Hardware stack levels used:    1
   537 ;; Hardware stack levels required when called:    1
   538 ;; This function calls:
   539 ;;		_clock
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           	psect	text2
   546  007D82                     __ptext2:
   547                           	opt callstack 0
   548  007D82                     _setTimer:
   549                           	opt callstack 29
   550                           
   551                           ;main.c: 73:     for(int i = 0; i < 8; i++) {
   552                           
   553                           ;incstack = 0
   554  007D82  0E00               	movlw	0
   555  007D84  6E0D               	movwf	setTimer@i+1,c
   556  007D86  0E00               	movlw	0
   557  007D88  6E0C               	movwf	setTimer@i,c
   558  007D8A                     l928:
   559                           
   560                           ;main.c: 74:         LATDbits.LATD1 = (minutos_dezena >> i) & 0x01;
   561  007D8A  C00C  F009         	movff	setTimer@i,??_setTimer
   562  007D8E  C001  F00A         	movff	setTimer@minutos_dezena,??_setTimer+1
   563  007D92  C002  F00B         	movff	setTimer@minutos_dezena+1,??_setTimer+2
   564  007D96  2A09               	incf	??_setTimer,f,c
   565  007D98  D003               	goto	u224
   566  007D9A                     u225:
   567  007D9A  340B               	rlcf	??_setTimer+2,w,c
   568  007D9C  320B               	rrcf	??_setTimer+2,f,c
   569  007D9E  320A               	rrcf	??_setTimer+1,f,c
   570  007DA0                     u224:
   571  007DA0  2E09               	decfsz	??_setTimer,f,c
   572  007DA2  D7FB               	goto	u225
   573  007DA4  0E01               	movlw	1
   574  007DA6  160A               	andwf	??_setTimer+1,f,c
   575  007DA8  460A               	rlncf	??_setTimer+1,f,c
   576  007DAA  508C               	movf	3980,w,c	;volatile
   577  007DAC  180A               	xorwf	??_setTimer+1,w,c
   578  007DAE  0BFD               	andlw	-3
   579  007DB0  180A               	xorwf	??_setTimer+1,w,c
   580  007DB2  6E8C               	movwf	3980,c	;volatile
   581                           
   582                           ;main.c: 75:         clock();
   583  007DB4  EC7C  F03E         	call	_clock	;wreg free
   584                           
   585                           ;main.c: 76:     }
   586  007DB8  4A0C               	infsnz	setTimer@i,f,c
   587  007DBA  2A0D               	incf	setTimer@i+1,f,c
   588  007DBC  BE0D               	btfsc	setTimer@i+1,7,c
   589  007DBE  D7E5               	goto	l928
   590  007DC0  500D               	movf	setTimer@i+1,w,c
   591  007DC2  E104               	bnz	u230
   592  007DC4  0E08               	movlw	8
   593  007DC6  5C0C               	subwf	setTimer@i,w,c
   594  007DC8  A0D8               	btfss	status,0,c
   595  007DCA  D7DF               	goto	l928
   596  007DCC                     u230:
   597                           
   598                           ;main.c: 77:     for(int i = 0; i < 8; i++) {
   599  007DCC  0E00               	movlw	0
   600  007DCE  6E0F               	movwf	setTimer@i_178+1,c
   601  007DD0  0E00               	movlw	0
   602  007DD2  6E0E               	movwf	setTimer@i_178,c
   603  007DD4                     l942:
   604                           
   605                           ;main.c: 78:         LATDbits.LATD1 = (minutos_unidade >> i) & 0x01;
   606  007DD4  C00E  F009         	movff	setTimer@i_178,??_setTimer
   607  007DD8  C003  F00A         	movff	setTimer@minutos_unidade,??_setTimer+1
   608  007DDC  C004  F00B         	movff	setTimer@minutos_unidade+1,??_setTimer+2
   609  007DE0  2A09               	incf	??_setTimer,f,c
   610  007DE2  D003               	goto	u244
   611  007DE4                     u245:
   612  007DE4  340B               	rlcf	??_setTimer+2,w,c
   613  007DE6  320B               	rrcf	??_setTimer+2,f,c
   614  007DE8  320A               	rrcf	??_setTimer+1,f,c
   615  007DEA                     u244:
   616  007DEA  2E09               	decfsz	??_setTimer,f,c
   617  007DEC  D7FB               	goto	u245
   618  007DEE  0E01               	movlw	1
   619  007DF0  160A               	andwf	??_setTimer+1,f,c
   620  007DF2  460A               	rlncf	??_setTimer+1,f,c
   621  007DF4  508C               	movf	3980,w,c	;volatile
   622  007DF6  180A               	xorwf	??_setTimer+1,w,c
   623  007DF8  0BFD               	andlw	-3
   624  007DFA  180A               	xorwf	??_setTimer+1,w,c
   625  007DFC  6E8C               	movwf	3980,c	;volatile
   626                           
   627                           ;main.c: 79:         clock();
   628  007DFE  EC7C  F03E         	call	_clock	;wreg free
   629                           
   630                           ;main.c: 80:     }for(int i = 0; i < 8; i++) {
   631  007E02  4A0E               	infsnz	setTimer@i_178,f,c
   632  007E04  2A0F               	incf	setTimer@i_178+1,f,c
   633  007E06  BE0F               	btfsc	setTimer@i_178+1,7,c
   634  007E08  D7E5               	goto	l942
   635  007E0A  500F               	movf	setTimer@i_178+1,w,c
   636  007E0C  E104               	bnz	u250
   637  007E0E  0E08               	movlw	8
   638  007E10  5C0E               	subwf	setTimer@i_178,w,c
   639  007E12  A0D8               	btfss	status,0,c
   640  007E14  D7DF               	goto	l942
   641  007E16                     u250:
   642  007E16  0E00               	movlw	0
   643  007E18  6E11               	movwf	setTimer@i_179+1,c
   644  007E1A  0E00               	movlw	0
   645  007E1C  6E10               	movwf	setTimer@i_179,c
   646  007E1E                     l956:
   647                           
   648                           ;main.c: 81:         LATDbits.LATD1 = (segundos_dezena >> i) & 0x01;
   649  007E1E  C010  F009         	movff	setTimer@i_179,??_setTimer
   650  007E22  C005  F00A         	movff	setTimer@segundos_dezena,??_setTimer+1
   651  007E26  C006  F00B         	movff	setTimer@segundos_dezena+1,??_setTimer+2
   652  007E2A  2A09               	incf	??_setTimer,f,c
   653  007E2C  D003               	goto	u264
   654  007E2E                     u265:
   655  007E2E  340B               	rlcf	??_setTimer+2,w,c
   656  007E30  320B               	rrcf	??_setTimer+2,f,c
   657  007E32  320A               	rrcf	??_setTimer+1,f,c
   658  007E34                     u264:
   659  007E34  2E09               	decfsz	??_setTimer,f,c
   660  007E36  D7FB               	goto	u265
   661  007E38  0E01               	movlw	1
   662  007E3A  160A               	andwf	??_setTimer+1,f,c
   663  007E3C  460A               	rlncf	??_setTimer+1,f,c
   664  007E3E  508C               	movf	3980,w,c	;volatile
   665  007E40  180A               	xorwf	??_setTimer+1,w,c
   666  007E42  0BFD               	andlw	-3
   667  007E44  180A               	xorwf	??_setTimer+1,w,c
   668  007E46  6E8C               	movwf	3980,c	;volatile
   669                           
   670                           ;main.c: 82:         clock();
   671  007E48  EC7C  F03E         	call	_clock	;wreg free
   672                           
   673                           ;main.c: 83:     }
   674  007E4C  4A10               	infsnz	setTimer@i_179,f,c
   675  007E4E  2A11               	incf	setTimer@i_179+1,f,c
   676  007E50  BE11               	btfsc	setTimer@i_179+1,7,c
   677  007E52  D7E5               	goto	l956
   678  007E54  5011               	movf	setTimer@i_179+1,w,c
   679  007E56  E104               	bnz	u270
   680  007E58  0E08               	movlw	8
   681  007E5A  5C10               	subwf	setTimer@i_179,w,c
   682  007E5C  A0D8               	btfss	status,0,c
   683  007E5E  D7DF               	goto	l956
   684  007E60                     u270:
   685                           
   686                           ;main.c: 84:     for(int i = 0; i < 8; i++) {
   687  007E60  0E00               	movlw	0
   688  007E62  6E13               	movwf	setTimer@i_180+1,c
   689  007E64  0E00               	movlw	0
   690  007E66  6E12               	movwf	setTimer@i_180,c
   691  007E68                     l970:
   692                           
   693                           ;main.c: 85:         LATDbits.LATD1 = (segundos_unidade >> i) & 0x01;
   694  007E68  C012  F009         	movff	setTimer@i_180,??_setTimer
   695  007E6C  C007  F00A         	movff	setTimer@segundos_unidade,??_setTimer+1
   696  007E70  C008  F00B         	movff	setTimer@segundos_unidade+1,??_setTimer+2
   697  007E74  2A09               	incf	??_setTimer,f,c
   698  007E76  D003               	goto	u284
   699  007E78                     u285:
   700  007E78  340B               	rlcf	??_setTimer+2,w,c
   701  007E7A  320B               	rrcf	??_setTimer+2,f,c
   702  007E7C  320A               	rrcf	??_setTimer+1,f,c
   703  007E7E                     u284:
   704  007E7E  2E09               	decfsz	??_setTimer,f,c
   705  007E80  D7FB               	goto	u285
   706  007E82  0E01               	movlw	1
   707  007E84  160A               	andwf	??_setTimer+1,f,c
   708  007E86  460A               	rlncf	??_setTimer+1,f,c
   709  007E88  508C               	movf	3980,w,c	;volatile
   710  007E8A  180A               	xorwf	??_setTimer+1,w,c
   711  007E8C  0BFD               	andlw	-3
   712  007E8E  180A               	xorwf	??_setTimer+1,w,c
   713  007E90  6E8C               	movwf	3980,c	;volatile
   714                           
   715                           ;main.c: 86:         clock();
   716  007E92  EC7C  F03E         	call	_clock	;wreg free
   717                           
   718                           ;main.c: 87:     }
   719  007E96  4A12               	infsnz	setTimer@i_180,f,c
   720  007E98  2A13               	incf	setTimer@i_180+1,f,c
   721  007E9A  BE13               	btfsc	setTimer@i_180+1,7,c
   722  007E9C  D7E5               	goto	l970
   723  007E9E  5013               	movf	setTimer@i_180+1,w,c
   724  007EA0  E105               	bnz	u290
   725  007EA2  0E08               	movlw	8
   726  007EA4  5C12               	subwf	setTimer@i_180,w,c
   727  007EA6  B0D8               	btfsc	status,0,c
   728  007EA8  0012               	return	
   729  007EAA  D7DE               	goto	l970
   730  007EAC                     u290:
   731  007EAC  0012               	return		;funcret
   732  007EAE                     __end_of_setTimer:
   733                           	opt callstack 0
   734                           
   735 ;; *************** function _sendData *****************
   736 ;; Defined at:
   737 ;;		line 103 in file "main.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  data            2    0[COMRAM] int 
   740 ;; Auto vars:     Size  Location     Type
   741 ;;  i               2    5[COMRAM] int 
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, status,2, status,0, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   751 ;;      Params:         2       0       0       0       0       0       0       0       0
   752 ;;      Locals:         2       0       0       0       0       0       0       0       0
   753 ;;      Temps:          3       0       0       0       0       0       0       0       0
   754 ;;      Totals:         7       0       0       0       0       0       0       0       0
   755 ;;Total ram usage:        7 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    1
   758 ;; This function calls:
   759 ;;		_clock
   760 ;; This function is called by:
   761 ;;		_main
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text3
   766  007D34                     __ptext3:
   767                           	opt callstack 0
   768  007D34                     _sendData:
   769                           	opt callstack 29
   770                           
   771                           ;main.c: 104:     for(int i = 0; i < 8; i++) {
   772                           
   773                           ;incstack = 0
   774  007D34  0E00               	movlw	0
   775  007D36  6E07               	movwf	sendData@i+1,c
   776  007D38  0E00               	movlw	0
   777  007D3A  6E06               	movwf	sendData@i,c
   778  007D3C                     l914:
   779                           
   780                           ;main.c: 105:         LATDbits.LATD1 = (data >> i) & 0x01;
   781  007D3C  C006  F003         	movff	sendData@i,??_sendData
   782  007D40  C001  F004         	movff	sendData@data,??_sendData+1
   783  007D44  C002  F005         	movff	sendData@data+1,??_sendData+2
   784  007D48  2A03               	incf	??_sendData,f,c
   785  007D4A  D003               	goto	u204
   786  007D4C                     u205:
   787  007D4C  3405               	rlcf	??_sendData+2,w,c
   788  007D4E  3205               	rrcf	??_sendData+2,f,c
   789  007D50  3204               	rrcf	??_sendData+1,f,c
   790  007D52                     u204:
   791  007D52  2E03               	decfsz	??_sendData,f,c
   792  007D54  D7FB               	goto	u205
   793  007D56  0E01               	movlw	1
   794  007D58  1604               	andwf	??_sendData+1,f,c
   795  007D5A  4604               	rlncf	??_sendData+1,f,c
   796  007D5C  508C               	movf	3980,w,c	;volatile
   797  007D5E  1804               	xorwf	??_sendData+1,w,c
   798  007D60  0BFD               	andlw	-3
   799  007D62  1804               	xorwf	??_sendData+1,w,c
   800  007D64  6E8C               	movwf	3980,c	;volatile
   801                           
   802                           ;main.c: 106:         clock();
   803  007D66  EC7C  F03E         	call	_clock	;wreg free
   804                           
   805                           ;main.c: 107:     }
   806  007D6A  4A06               	infsnz	sendData@i,f,c
   807  007D6C  2A07               	incf	sendData@i+1,f,c
   808  007D6E  BE07               	btfsc	sendData@i+1,7,c
   809  007D70  D7E5               	goto	l914
   810  007D72  5007               	movf	sendData@i+1,w,c
   811  007D74  E105               	bnz	u210
   812  007D76  0E08               	movlw	8
   813  007D78  5C06               	subwf	sendData@i,w,c
   814  007D7A  B0D8               	btfsc	status,0,c
   815  007D7C  0012               	return	
   816  007D7E  D7DE               	goto	l914
   817  007D80                     u210:
   818  007D80  0012               	return		;funcret
   819  007D82                     __end_of_sendData:
   820                           	opt callstack 0
   821                           
   822 ;; *************** function _clock *****************
   823 ;; Defined at:
   824 ;;		line 111 in file "main.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;		None
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   838 ;;      Params:         0       0       0       0       0       0       0       0       0
   839 ;;      Locals:         0       0       0       0       0       0       0       0       0
   840 ;;      Temps:          0       0       0       0       0       0       0       0       0
   841 ;;      Totals:         0       0       0       0       0       0       0       0       0
   842 ;;Total ram usage:        0 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; This function calls:
   845 ;;		Nothing
   846 ;; This function is called by:
   847 ;;		_setTimer
   848 ;;		_sendData
   849 ;;		_sendDualData
   850 ;; This function uses a non-reentrant model
   851 ;;
   852                           
   853                           	psect	text4
   854  007CF8                     __ptext4:
   855                           	opt callstack 0
   856  007CF8                     _clock:
   857                           	opt callstack 29
   858                           
   859                           ;main.c: 112:     LATDbits.LATD0 = 1;
   860                           
   861                           ;incstack = 0
   862  007CF8  808C               	bsf	3980,0,c	;volatile
   863                           
   864                           ;main.c: 113:     _delay((unsigned long)((500)*(8000000/4000000.0)));
   865  007CFA  0EC8               	movlw	200
   866  007CFC                     u367:
   867  007CFC  D000               	nop2	
   868  007CFE  2EE8               	decfsz	wreg,f,c
   869  007D00  D7FD               	bra	u367
   870                           
   871                           ;main.c: 114:     LATDbits.LATD0 = 0;
   872  007D02  908C               	bcf	3980,0,c	;volatile
   873                           
   874                           ;main.c: 115:     _delay((unsigned long)((500)*(8000000/4000000.0)));
   875  007D04  0EC8               	movlw	200
   876  007D06                     u377:
   877  007D06  D000               	nop2	
   878  007D08  2EE8               	decfsz	wreg,f,c
   879  007D0A  D7FD               	bra	u377
   880  007D0C  0012               	return		;funcret
   881  007D0E                     __end_of_clock:
   882                           	opt callstack 0
   883                           
   884 ;; *************** function _key *****************
   885 ;; Defined at:
   886 ;;		line 118 in file "main.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;		None
   889 ;; Auto vars:     Size  Location     Type
   890 ;;		None
   891 ;; Return value:  Size  Location     Type
   892 ;;                  1    wreg      void 
   893 ;; Registers used:
   894 ;;		wreg
   895 ;; Tracked objects:
   896 ;;		On entry : 0/0
   897 ;;		On exit  : 0/0
   898 ;;		Unchanged: 0/0
   899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   900 ;;      Params:         0       0       0       0       0       0       0       0       0
   901 ;;      Locals:         0       0       0       0       0       0       0       0       0
   902 ;;      Temps:          0       0       0       0       0       0       0       0       0
   903 ;;      Totals:         0       0       0       0       0       0       0       0       0
   904 ;;Total ram usage:        0 bytes
   905 ;; Hardware stack levels used:    1
   906 ;; This function calls:
   907 ;;		Nothing
   908 ;; This function is called by:
   909 ;;		_main
   910 ;;		_sendDualData
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914                           	psect	text5
   915  007CD6                     __ptext5:
   916                           	opt callstack 0
   917  007CD6                     _key:
   918                           	opt callstack 30
   919                           
   920                           ;main.c: 119:     LATDbits.LATD2 = 1;
   921                           
   922                           ;incstack = 0
   923  007CD6  848C               	bsf	3980,2,c	;volatile
   924                           
   925                           ;main.c: 120:     _delay((unsigned long)((500)*(8000000/4000000.0)));
   926  007CD8  0EC8               	movlw	200
   927  007CDA                     u387:
   928  007CDA  D000               	nop2	
   929  007CDC  2EE8               	decfsz	wreg,f,c
   930  007CDE  D7FD               	bra	u387
   931                           
   932                           ;main.c: 121:     LATDbits.LATD2 = 0;
   933  007CE0  948C               	bcf	3980,2,c	;volatile
   934  007CE2  0012               	return		;funcret
   935  007CE4                     __end_of_key:
   936                           	opt callstack 0
   937  0000                     
   938                           	psect	rparam
   939  0000                     tosu	equ	0xFFF
   940                           tosh	equ	0xFFE
   941                           tosl	equ	0xFFD
   942                           stkptr	equ	0xFFC
   943                           pclatu	equ	0xFFB
   944                           pclath	equ	0xFFA
   945                           pcl	equ	0xFF9
   946                           tblptru	equ	0xFF8
   947                           tblptrh	equ	0xFF7
   948                           tblptrl	equ	0xFF6
   949                           tablat	equ	0xFF5
   950                           prodh	equ	0xFF4
   951                           prodl	equ	0xFF3
   952                           indf0	equ	0xFEF
   953                           postinc0	equ	0xFEE
   954                           postdec0	equ	0xFED
   955                           preinc0	equ	0xFEC
   956                           plusw0	equ	0xFEB
   957                           fsr0h	equ	0xFEA
   958                           fsr0l	equ	0xFE9
   959                           wreg	equ	0xFE8
   960                           indf1	equ	0xFE7
   961                           postinc1	equ	0xFE6
   962                           postdec1	equ	0xFE5
   963                           preinc1	equ	0xFE4
   964                           plusw1	equ	0xFE3
   965                           fsr1h	equ	0xFE2
   966                           fsr1l	equ	0xFE1
   967                           bsr	equ	0xFE0
   968                           indf2	equ	0xFDF
   969                           postinc2	equ	0xFDE
   970                           postdec2	equ	0xFDD
   971                           preinc2	equ	0xFDC
   972                           plusw2	equ	0xFDB
   973                           fsr2h	equ	0xFDA
   974                           fsr2l	equ	0xFD9
   975                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     32      52
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_setTimer

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0    1140
                                             19 COMRAM    13    13      0
                                _key
                           _sendData
                           _setTimer
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setTimer                                            19    11      8     664
                                              0 COMRAM    19    11      8
                              _clock
 ---------------------------------------------------------------------------------
 (1) _sendData                                             7     5      2     242
                                              0 COMRAM     7     5      2
                              _clock
 ---------------------------------------------------------------------------------
 (2) _clock                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _key                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _key
   _sendData
     _clock
   _setTimer
     _clock
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     20      34       1       54.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      34      20        0.0%
DATA                 0      0      34       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Sun May 26 16:25:34 2019

                     l914 7D3C                       l942 7DD4                       l928 7D8A  
                     l970 7E68                       l956 7E1E                       l990 7EDA  
                     l994 7EE2                       l998 7EEA                       u210 7D80  
                     u204 7D52                       u205 7D4C                       u230 7DCC  
                     u224 7DA0                       u320 7FC2                       u225 7D9A  
                     u250 7E16                       u330 7FD6                       u244 7DEA  
                     u340 7FF2                       u245 7DE4                       u270 7E60  
                     u264 7E34                       u265 7E2E                       u290 7EAC  
                     u284 7E7E                       u285 7E78                       u357 7FA4  
                     u367 7CFC                       u377 7D06                       u387 7CDA  
                     _key 7CD6                       wreg 000FE8                      l1004 7EF2  
                    ?_key 0001                      _main 7EAE                      fsr2h 000FDA  
                    fsr1l 000FE1                      fsr2l 000FD9               main@pontos1 0017  
             main@pontos2 0019                      start 0000              ___param_bank 000000  
                   ??_key 0001                     ?_main 0001                     _TRISD 000F95  
                   _clock 7CF8                     _setup 7CCC                     main@i 001F  
                   tablat 000FF5                     status 000FD8           __initialization 7D0E  
            __end_of_main 8000                    ??_main 0014             __activetblptr 000000  
                  ?_clock 0001                    _ADCON1 000FC1                    ?_setup 0001  
        __end_of_sendData 7D82          __end_of_setTimer 7EAE              __pdataCOMRAM 0021  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
              __accesstop 0060   __end_of__initialization 7D2E             ___rparam_used 000001  
          __pcstackCOMRAM 0001   setTimer@segundos_dezena 0005             __end_of_clock 7D0E  
           __end_of_setup 7CD6                   ??_clock 0001                   ??_setup 0001  
     main@minutos_unidade 001B                 ?_sendData 0001                   __Hparam 0000  
               ?_setTimer 0001                   __Lparam 0000                   __pcinit 7D0E  
                 __ramtop 0800                   __ptext0 7EAE                   __ptext1 7CCC  
                 __ptext2 7D82                   __ptext3 7D34                   __ptext4 7CF8  
                 __ptext5 7CD6              __size_of_key 000E      end_of_initialization 7D2E  
              ??_sendData 0003                ??_setTimer 0009                   postdec1 000FE5  
                 postdec2 000FDD                   postinc0 000FEE                   postinc2 000FDE  
               _PORTDbits 000F83             setTimer@i_180 0012             setTimer@i_178 000E  
           setTimer@i_179 0010             __pidataCOMRAM 7CE4       start_initialization 7D0E  
setTimer@segundos_unidade 0007               __end_of_key 7CE4              sendData@data 0001  
       __size_of_sendData 004E        main@minutos_dezena 0015         __size_of_setTimer 012C  
          __size_of_clock 0016            __size_of_setup 000A                  _LATDbits 000F8C  
     main@segundos_dezena 001D                 copy_data0 7D22                  __Hrparam 0000  
                __Lrparam 0000                 sendData@i 0006                 setTimer@i 000C  
                _byte7seg 0021             __size_of_main 0152                  _sendData 7D34  
 setTimer@minutos_unidade 0003                  _setTimer 7D82    setTimer@minutos_dezena 0001  
