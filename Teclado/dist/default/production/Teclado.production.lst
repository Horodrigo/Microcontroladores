

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Fri Apr 05 22:34:11 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	text3,global,reloc=2,class=CODE,delta=1
    11                           	psect	text4,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    14  0000                     
    15                           ; Version 2.05
    16                           ; Generated 20/12/2018 GMT
    17                           ; 
    18                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _LATD	set	3980
    50  0000                     _LATCbits	set	3979
    51  0000                     _ADCON1	set	4033
    52  0000                     _TRISCbits	set	3988
    53  0000                     _TRISD	set	3989
    54  0000                     _TRISBbits	set	3987
    55  0000                     _PORTBbits	set	3969
    56  0000                     _LATBbits	set	3978
    57                           
    58                           ; #config settings
    59                           
    60                           	psect	cinit
    61  007E4C                     __pcinit:
    62                           	opt callstack 0
    63  007E4C                     start_initialization:
    64                           	opt callstack 0
    65  007E4C                     __initialization:
    66                           	opt callstack 0
    67  007E4C                     end_of_initialization:
    68                           	opt callstack 0
    69  007E4C                     __end_of__initialization:
    70                           	opt callstack 0
    71  007E4C  0100               	movlb	0
    72  007E4E  EF38  F03F         	goto	_main	;jump to C main() function
    73                           
    74                           	psect	cstackCOMRAM
    75  000001                     __pcstackCOMRAM:
    76                           	opt callstack 0
    77  000001                     ??_inicia_lcd:
    78  000001                     ??_envia_char:
    79  000001                     
    80                           ; 1 bytes @ 0x0
    81  000001                     	ds	2
    82  000003                     envia_char@dado:
    83                           	opt callstack 0
    84                           
    85                           ; 1 bytes @ 0x2
    86  000003                     	ds	1
    87  000004                     main@key:
    88                           	opt callstack 0
    89                           
    90                           ; 1 bytes @ 0x3
    91  000004                     	ds	1
    92                           
    93 ;;
    94 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    95 ;;
    96 ;; *************** function _main *****************
    97 ;; Defined at:
    98 ;;		line 39 in file "main.c"
    99 ;; Parameters:    Size  Location     Type
   100 ;;		None
   101 ;; Auto vars:     Size  Location     Type
   102 ;;  key             1    3[COMRAM] unsigned char 
   103 ;; Return value:  Size  Location     Type
   104 ;;                  1    wreg      void 
   105 ;; Registers used:
   106 ;;		wreg, status,2, status,0, cstack
   107 ;; Tracked objects:
   108 ;;		On entry : 0/0
   109 ;;		On exit  : 0/0
   110 ;;		Unchanged: 0/0
   111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   112 ;;      Params:         0       0       0       0       0       0       0       0       0
   113 ;;      Locals:         1       0       0       0       0       0       0       0       0
   114 ;;      Temps:          0       0       0       0       0       0       0       0       0
   115 ;;      Totals:         1       0       0       0       0       0       0       0       0
   116 ;;Total ram usage:        1 bytes
   117 ;; Hardware stack levels required when called:    1
   118 ;; This function calls:
   119 ;;		_entrada_teclado
   120 ;;		_envia_char
   121 ;;		_inicia_lcd
   122 ;;		_setup
   123 ;; This function is called by:
   124 ;;		Startup code after reset
   125 ;; This function uses a non-reentrant model
   126 ;;
   127                           
   128                           	psect	text0
   129  007E70                     __ptext0:
   130                           	opt callstack 0
   131  007E70                     _main:
   132                           	opt callstack 30
   133                           
   134                           ;main.c: 40:     setup();
   135                           
   136                           ;incstack = 0
   137  007E70  EC29  F03F         	call	_setup	;wreg free
   138                           
   139                           ;main.c: 41:     inicia_lcd();
   140  007E74  EC5B  F03F         	call	_inicia_lcd	;wreg free
   141  007E78                     l33:
   142                           
   143                           ;main.c: 44:         key = entrada_teclado();
   144  007E78  ECA6  F03F         	call	_entrada_teclado	;wreg free
   145  007E7C  6E04               	movwf	main@key,c
   146                           
   147                           ;main.c: 45:         if(key != 'n')
   148  007E7E  0E6E               	movlw	110
   149  007E80  1804               	xorwf	main@key,w,c
   150  007E82  B4D8               	btfsc	status,2,c
   151  007E84  D7F9               	goto	l33
   152                           
   153                           ;main.c: 46:             envia_char(key);
   154  007E86  5004               	movf	main@key,w,c
   155  007E88  EC47  F03F         	call	_envia_char
   156  007E8C  D7F5               	goto	l33
   157  007E8E                     __end_of_main:
   158                           	opt callstack 0
   159                           
   160 ;; *************** function _setup *****************
   161 ;; Defined at:
   162 ;;		line 79 in file "main.c"
   163 ;; Parameters:    Size  Location     Type
   164 ;;		None
   165 ;; Auto vars:     Size  Location     Type
   166 ;;		None
   167 ;; Return value:  Size  Location     Type
   168 ;;                  1    wreg      void 
   169 ;; Registers used:
   170 ;;		wreg, status,2
   171 ;; Tracked objects:
   172 ;;		On entry : 0/0
   173 ;;		On exit  : 0/0
   174 ;;		Unchanged: 0/0
   175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   176 ;;      Params:         0       0       0       0       0       0       0       0       0
   177 ;;      Locals:         0       0       0       0       0       0       0       0       0
   178 ;;      Temps:          0       0       0       0       0       0       0       0       0
   179 ;;      Totals:         0       0       0       0       0       0       0       0       0
   180 ;;Total ram usage:        0 bytes
   181 ;; Hardware stack levels used:    1
   182 ;; This function calls:
   183 ;;		Nothing
   184 ;; This function is called by:
   185 ;;		_main
   186 ;; This function uses a non-reentrant model
   187 ;;
   188                           
   189                           	psect	text1
   190  007E52                     __ptext1:
   191                           	opt callstack 0
   192  007E52                     _setup:
   193                           	opt callstack 30
   194                           
   195                           ;main.c: 80:     TRISBbits.RB5 = 1;
   196                           
   197                           ;incstack = 0
   198  007E52  8A93               	bsf	3987,5,c	;volatile
   199                           
   200                           ;main.c: 81:     TRISBbits.RB6 = 1;
   201  007E54  8C93               	bsf	3987,6,c	;volatile
   202                           
   203                           ;main.c: 82:     TRISBbits.RB7 = 1;
   204  007E56  8E93               	bsf	3987,7,c	;volatile
   205                           
   206                           ;main.c: 84:     TRISBbits.RB4 = 0;
   207  007E58  9893               	bcf	3987,4,c	;volatile
   208                           
   209                           ;main.c: 85:     TRISBbits.RB3 = 0;
   210  007E5A  9693               	bcf	3987,3,c	;volatile
   211                           
   212                           ;main.c: 86:     TRISBbits.RB2 = 0;
   213  007E5C  9493               	bcf	3987,2,c	;volatile
   214                           
   215                           ;main.c: 87:     TRISBbits.RB1 = 0;
   216  007E5E  9293               	bcf	3987,1,c	;volatile
   217                           
   218                           ;main.c: 90:     TRISD = 0b00000000;
   219  007E60  0E00               	movlw	0
   220  007E62  6E95               	movwf	3989,c	;volatile
   221                           
   222                           ;main.c: 91:     TRISCbits.RC0 = 0;
   223  007E64  9094               	bcf	3988,0,c	;volatile
   224                           
   225                           ;main.c: 92:     TRISCbits.RC1 = 0;
   226  007E66  9294               	bcf	3988,1,c	;volatile
   227                           
   228                           ;main.c: 93:     TRISCbits.RC2 = 0;
   229  007E68  9494               	bcf	3988,2,c	;volatile
   230                           
   231                           ;main.c: 94:     ADCON1 = 0x0F;
   232  007E6A  0E0F               	movlw	15
   233  007E6C  6EC1               	movwf	4033,c	;volatile
   234  007E6E  0012               	return		;funcret
   235  007E70                     __end_of_setup:
   236                           	opt callstack 0
   237                           
   238 ;; *************** function _inicia_lcd *****************
   239 ;; Defined at:
   240 ;;		line 114 in file "main.c"
   241 ;; Parameters:    Size  Location     Type
   242 ;;		None
   243 ;; Auto vars:     Size  Location     Type
   244 ;;		None
   245 ;; Return value:  Size  Location     Type
   246 ;;                  1    wreg      void 
   247 ;; Registers used:
   248 ;;		wreg, status,2
   249 ;; Tracked objects:
   250 ;;		On entry : 0/0
   251 ;;		On exit  : 0/0
   252 ;;		Unchanged: 0/0
   253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   254 ;;      Params:         0       0       0       0       0       0       0       0       0
   255 ;;      Locals:         0       0       0       0       0       0       0       0       0
   256 ;;      Temps:          2       0       0       0       0       0       0       0       0
   257 ;;      Totals:         2       0       0       0       0       0       0       0       0
   258 ;;Total ram usage:        2 bytes
   259 ;; Hardware stack levels used:    1
   260 ;; This function calls:
   261 ;;		Nothing
   262 ;; This function is called by:
   263 ;;		_main
   264 ;; This function uses a non-reentrant model
   265 ;;
   266                           
   267                           	psect	text2
   268  007EB6                     __ptext2:
   269                           	opt callstack 0
   270  007EB6                     _inicia_lcd:
   271                           	opt callstack 30
   272                           
   273                           ;main.c: 115:     _delay((unsigned long)((100)*(8000000/4000.0)));
   274                           
   275                           ;incstack = 0
   276  007EB6  0E02               	movlw	2
   277  007EB8  6E02               	movwf	(??_inicia_lcd+1)& (0+255),c
   278  007EBA  0E04               	movlw	4
   279  007EBC  6E01               	movwf	??_inicia_lcd& (0+255),c
   280  007EBE  0EBA               	movlw	186
   281  007EC0                     u277:
   282  007EC0  2EE8               	decfsz	wreg,f,c
   283  007EC2  D7FE               	bra	u277
   284  007EC4  2E01               	decfsz	??_inicia_lcd& (0+255),f,c
   285  007EC6  D7FC               	bra	u277
   286  007EC8  2E02               	decfsz	(??_inicia_lcd+1)& (0+255),f,c
   287  007ECA  D7FA               	bra	u277
   288  007ECC  D000               	nop2	
   289                           
   290                           ;main.c: 116:     LATCbits.LATC2 = 0;
   291  007ECE  948B               	bcf	3979,2,c	;volatile
   292                           
   293                           ;main.c: 117:     LATCbits.LATC0 = 0;
   294  007ED0  908B               	bcf	3979,0,c	;volatile
   295                           
   296                           ;main.c: 118:     LATD = 0b00111100;
   297  007ED2  0E3C               	movlw	60
   298  007ED4  6E8C               	movwf	3980,c	;volatile
   299                           
   300                           ;main.c: 119:     _delay((unsigned long)((100)*(8000000/4000.0)));
   301  007ED6  0E02               	movlw	2
   302  007ED8  6E02               	movwf	(??_inicia_lcd+1)& (0+255),c
   303  007EDA  0E04               	movlw	4
   304  007EDC  6E01               	movwf	??_inicia_lcd& (0+255),c
   305  007EDE  0EBA               	movlw	186
   306  007EE0                     u287:
   307  007EE0  2EE8               	decfsz	wreg,f,c
   308  007EE2  D7FE               	bra	u287
   309  007EE4  2E01               	decfsz	??_inicia_lcd& (0+255),f,c
   310  007EE6  D7FC               	bra	u287
   311  007EE8  2E02               	decfsz	(??_inicia_lcd+1)& (0+255),f,c
   312  007EEA  D7FA               	bra	u287
   313  007EEC  D000               	nop2	
   314                           
   315                           ;main.c: 120:     LATCbits.LATC2 = 1;
   316  007EEE  848B               	bsf	3979,2,c	;volatile
   317                           
   318                           ;main.c: 121:     LATCbits.LATC2 = 0;
   319  007EF0  948B               	bcf	3979,2,c	;volatile
   320                           
   321                           ;main.c: 122:     LATD = 0b00001111;
   322  007EF2  0E0F               	movlw	15
   323  007EF4  6E8C               	movwf	3980,c	;volatile
   324                           
   325                           ;main.c: 123:     _delay((unsigned long)((100)*(8000000/4000.0)));
   326  007EF6  0E02               	movlw	2
   327  007EF8  6E02               	movwf	(??_inicia_lcd+1)& (0+255),c
   328  007EFA  0E04               	movlw	4
   329  007EFC  6E01               	movwf	??_inicia_lcd& (0+255),c
   330  007EFE  0EBA               	movlw	186
   331  007F00                     u297:
   332  007F00  2EE8               	decfsz	wreg,f,c
   333  007F02  D7FE               	bra	u297
   334  007F04  2E01               	decfsz	??_inicia_lcd& (0+255),f,c
   335  007F06  D7FC               	bra	u297
   336  007F08  2E02               	decfsz	(??_inicia_lcd+1)& (0+255),f,c
   337  007F0A  D7FA               	bra	u297
   338  007F0C  D000               	nop2	
   339                           
   340                           ;main.c: 124:     LATCbits.LATC2 = 1;
   341  007F0E  848B               	bsf	3979,2,c	;volatile
   342                           
   343                           ;main.c: 125:     LATCbits.LATC2 = 0;
   344  007F10  948B               	bcf	3979,2,c	;volatile
   345                           
   346                           ;main.c: 126:     LATD = 0b00000001;
   347  007F12  0E01               	movlw	1
   348  007F14  6E8C               	movwf	3980,c	;volatile
   349                           
   350                           ;main.c: 127:     _delay((unsigned long)((100)*(8000000/4000.0)));
   351  007F16  0E02               	movlw	2
   352  007F18  6E02               	movwf	(??_inicia_lcd+1)& (0+255),c
   353  007F1A  0E04               	movlw	4
   354  007F1C  6E01               	movwf	??_inicia_lcd& (0+255),c
   355  007F1E  0EBA               	movlw	186
   356  007F20                     u307:
   357  007F20  2EE8               	decfsz	wreg,f,c
   358  007F22  D7FE               	bra	u307
   359  007F24  2E01               	decfsz	??_inicia_lcd& (0+255),f,c
   360  007F26  D7FC               	bra	u307
   361  007F28  2E02               	decfsz	(??_inicia_lcd+1)& (0+255),f,c
   362  007F2A  D7FA               	bra	u307
   363  007F2C  D000               	nop2	
   364                           
   365                           ;main.c: 128:     LATCbits.LATC2 = 1;
   366  007F2E  848B               	bsf	3979,2,c	;volatile
   367                           
   368                           ;main.c: 129:     LATCbits.LATC2 = 0;
   369  007F30  948B               	bcf	3979,2,c	;volatile
   370                           
   371                           ;main.c: 130:     _delay((unsigned long)((100)*(8000000/4000.0)));
   372  007F32  0E02               	movlw	2
   373  007F34  6E02               	movwf	(??_inicia_lcd+1)& (0+255),c
   374  007F36  0E04               	movlw	4
   375  007F38  6E01               	movwf	??_inicia_lcd& (0+255),c
   376  007F3A  0EBA               	movlw	186
   377  007F3C                     u317:
   378  007F3C  2EE8               	decfsz	wreg,f,c
   379  007F3E  D7FE               	bra	u317
   380  007F40  2E01               	decfsz	??_inicia_lcd& (0+255),f,c
   381  007F42  D7FC               	bra	u317
   382  007F44  2E02               	decfsz	(??_inicia_lcd+1)& (0+255),f,c
   383  007F46  D7FA               	bra	u317
   384  007F48  D000               	nop2	
   385  007F4A  0012               	return		;funcret
   386  007F4C                     __end_of_inicia_lcd:
   387                           	opt callstack 0
   388                           
   389 ;; *************** function _envia_char *****************
   390 ;; Defined at:
   391 ;;		line 97 in file "main.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;  dado            1    wreg     unsigned char 
   394 ;; Auto vars:     Size  Location     Type
   395 ;;  dado            1    2[COMRAM] unsigned char 
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, status,2, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   405 ;;      Params:         0       0       0       0       0       0       0       0       0
   406 ;;      Locals:         1       0       0       0       0       0       0       0       0
   407 ;;      Temps:          2       0       0       0       0       0       0       0       0
   408 ;;      Totals:         3       0       0       0       0       0       0       0       0
   409 ;;Total ram usage:        3 bytes
   410 ;; Hardware stack levels used:    1
   411 ;; This function calls:
   412 ;;		Nothing
   413 ;; This function is called by:
   414 ;;		_main
   415 ;;		_envia_frase
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419                           	psect	text3
   420  007E8E                     __ptext3:
   421                           	opt callstack 0
   422  007E8E                     _envia_char:
   423                           	opt callstack 30
   424                           
   425                           ;incstack = 0
   426                           ;envia_char@dado stored from wreg
   427  007E8E  6E03               	movwf	envia_char@dado,c
   428                           
   429                           ;main.c: 98:     LATCbits.LATC2 = 0;
   430  007E90  948B               	bcf	3979,2,c	;volatile
   431                           
   432                           ;main.c: 99:     LATCbits.LATC0 = 1;
   433  007E92  808B               	bsf	3979,0,c	;volatile
   434                           
   435                           ;main.c: 100:     LATD = dado;
   436  007E94  C003  FF8C         	movff	envia_char@dado,3980	;volatile
   437                           
   438                           ;main.c: 101:     LATCbits.LATC2 = 1;
   439  007E98  848B               	bsf	3979,2,c	;volatile
   440                           
   441                           ;main.c: 102:     LATCbits.LATC2 = 0;
   442  007E9A  948B               	bcf	3979,2,c	;volatile
   443                           
   444                           ;main.c: 103:     _delay((unsigned long)((100)*(8000000/4000.0)));
   445  007E9C  0E02               	movlw	2
   446  007E9E  6E02               	movwf	(??_envia_char+1)& (0+255),c
   447  007EA0  0E04               	movlw	4
   448  007EA2  6E01               	movwf	??_envia_char& (0+255),c
   449  007EA4  0EBA               	movlw	186
   450  007EA6                     u327:
   451  007EA6  2EE8               	decfsz	wreg,f,c
   452  007EA8  D7FE               	bra	u327
   453  007EAA  2E01               	decfsz	??_envia_char& (0+255),f,c
   454  007EAC  D7FC               	bra	u327
   455  007EAE  2E02               	decfsz	(??_envia_char+1)& (0+255),f,c
   456  007EB0  D7FA               	bra	u327
   457  007EB2  D000               	nop2	
   458  007EB4  0012               	return		;funcret
   459  007EB6                     __end_of_envia_char:
   460                           	opt callstack 0
   461                           
   462 ;; *************** function _entrada_teclado *****************
   463 ;; Defined at:
   464 ;;		line 51 in file "main.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;                  1    wreg      unsigned char 
   471 ;; Registers used:
   472 ;;		wreg
   473 ;; Tracked objects:
   474 ;;		On entry : 0/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   478 ;;      Params:         0       0       0       0       0       0       0       0       0
   479 ;;      Locals:         0       0       0       0       0       0       0       0       0
   480 ;;      Temps:          0       0       0       0       0       0       0       0       0
   481 ;;      Totals:         0       0       0       0       0       0       0       0       0
   482 ;;Total ram usage:        0 bytes
   483 ;; Hardware stack levels used:    1
   484 ;; This function calls:
   485 ;;		Nothing
   486 ;; This function is called by:
   487 ;;		_main
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           	psect	text4
   492  007F4C                     __ptext4:
   493                           	opt callstack 0
   494  007F4C                     _entrada_teclado:
   495                           	opt callstack 30
   496                           
   497                           ;main.c: 52:     LATBbits.LATB4 = 1, LATBbits.LATB3 = 0, LATBbits.LATB2 = 0, LATBbits.LA
      +                          TB1 = 0;
   498                           
   499                           ;incstack = 0
   500  007F4C  888A               	bsf	3978,4,c	;volatile
   501  007F4E  968A               	bcf	3978,3,c	;volatile
   502  007F50  948A               	bcf	3978,2,c	;volatile
   503  007F52  928A               	bcf	3978,1,c	;volatile
   504                           
   505                           ;main.c: 54:     if(PORTBbits.RB7 == 1){ while(PORTBbits.RB7 == 1){} return '1'; }
   506  007F54  AE81               	btfss	3969,7,c	;volatile
   507  007F56  D004               	goto	l40
   508  007F58                     u10:
   509  007F58  BE81               	btfsc	3969,7,c	;volatile
   510  007F5A  D7FE               	goto	u10
   511  007F5C  0E31               	movlw	49
   512  007F5E  0012               	return	
   513  007F60                     l40:
   514                           
   515                           ;main.c: 55:     if(PORTBbits.RB6 == 1){ while(PORTBbits.RB6 == 1){} return '2'; }
   516  007F60  AC81               	btfss	3969,6,c	;volatile
   517  007F62  D004               	goto	l45
   518  007F64                     u30:
   519  007F64  BC81               	btfsc	3969,6,c	;volatile
   520  007F66  D7FE               	goto	u30
   521  007F68  0E32               	movlw	50
   522  007F6A  0012               	return	
   523  007F6C                     l45:
   524                           
   525                           ;main.c: 56:     if(PORTBbits.RB5 == 1){ while(PORTBbits.RB5 == 1){} return '3'; }
   526  007F6C  AA81               	btfss	3969,5,c	;volatile
   527  007F6E  D004               	goto	l49
   528  007F70                     u50:
   529  007F70  BA81               	btfsc	3969,5,c	;volatile
   530  007F72  D7FE               	goto	u50
   531  007F74  0E33               	movlw	51
   532  007F76  0012               	return	
   533  007F78                     l49:
   534                           
   535                           ;main.c: 58:     LATBbits.LATB4 = 0,LATBbits.LATB3 = 1, LATBbits.LATB2 = 0, LATBbits.LAT
      +                          B1 = 0;
   536  007F78  988A               	bcf	3978,4,c	;volatile
   537  007F7A  868A               	bsf	3978,3,c	;volatile
   538  007F7C  948A               	bcf	3978,2,c	;volatile
   539  007F7E  928A               	bcf	3978,1,c	;volatile
   540                           
   541                           ;main.c: 60:     if(PORTBbits.RB7 == 1){ while(PORTBbits.RB7 == 1){} return '4'; }
   542  007F80  AE81               	btfss	3969,7,c	;volatile
   543  007F82  D004               	goto	l53
   544  007F84                     u70:
   545  007F84  BE81               	btfsc	3969,7,c	;volatile
   546  007F86  D7FE               	goto	u70
   547  007F88  0E34               	movlw	52
   548  007F8A  0012               	return	
   549  007F8C                     l53:
   550                           
   551                           ;main.c: 61:     if(PORTBbits.RB6 == 1){ while(PORTBbits.RB6 == 1){} return '5'; }
   552  007F8C  AC81               	btfss	3969,6,c	;volatile
   553  007F8E  D004               	goto	l57
   554  007F90                     u90:
   555  007F90  BC81               	btfsc	3969,6,c	;volatile
   556  007F92  D7FE               	goto	u90
   557  007F94  0E35               	movlw	53
   558  007F96  0012               	return	
   559  007F98                     l57:
   560                           
   561                           ;main.c: 62:     if(PORTBbits.RB5 == 1){ while(PORTBbits.RB5 == 1){} return '6'; }
   562  007F98  AA81               	btfss	3969,5,c	;volatile
   563  007F9A  D004               	goto	l61
   564  007F9C                     u110:
   565  007F9C  BA81               	btfsc	3969,5,c	;volatile
   566  007F9E  D7FE               	goto	u110
   567  007FA0  0E36               	movlw	54
   568  007FA2  0012               	return	
   569  007FA4                     l61:
   570                           
   571                           ;main.c: 64:     LATBbits.LATB4 = 0, LATBbits.LATB3 = 0, LATBbits.LATB2 = 1, LATBbits.LA
      +                          TB1 = 0;
   572  007FA4  988A               	bcf	3978,4,c	;volatile
   573  007FA6  968A               	bcf	3978,3,c	;volatile
   574  007FA8  848A               	bsf	3978,2,c	;volatile
   575  007FAA  928A               	bcf	3978,1,c	;volatile
   576                           
   577                           ;main.c: 66:     if(PORTBbits.RB7 == 1){ while(PORTBbits.RB7 == 1){} return '7'; }
   578  007FAC  AE81               	btfss	3969,7,c	;volatile
   579  007FAE  D004               	goto	l65
   580  007FB0                     u130:
   581  007FB0  BE81               	btfsc	3969,7,c	;volatile
   582  007FB2  D7FE               	goto	u130
   583  007FB4  0E37               	movlw	55
   584  007FB6  0012               	return	
   585  007FB8                     l65:
   586                           
   587                           ;main.c: 67:     if(PORTBbits.RB6 == 1){ while(PORTBbits.RB6 == 1){} return '8'; }
   588  007FB8  AC81               	btfss	3969,6,c	;volatile
   589  007FBA  D004               	goto	l69
   590  007FBC                     u150:
   591  007FBC  BC81               	btfsc	3969,6,c	;volatile
   592  007FBE  D7FE               	goto	u150
   593  007FC0  0E38               	movlw	56
   594  007FC2  0012               	return	
   595  007FC4                     l69:
   596                           
   597                           ;main.c: 68:     if(PORTBbits.RB5 == 1){ while(PORTBbits.RB5 == 1){} return '9'; }
   598  007FC4  AA81               	btfss	3969,5,c	;volatile
   599  007FC6  D004               	goto	l73
   600  007FC8                     u170:
   601  007FC8  BA81               	btfsc	3969,5,c	;volatile
   602  007FCA  D7FE               	goto	u170
   603  007FCC  0E39               	movlw	57
   604  007FCE  0012               	return	
   605  007FD0                     l73:
   606                           
   607                           ;main.c: 70:     LATBbits.LATB4 = 0, LATBbits.LATB3 = 0, LATBbits.LATB2 = 0, LATBbits.LA
      +                          TB1 = 1;
   608  007FD0  988A               	bcf	3978,4,c	;volatile
   609  007FD2  968A               	bcf	3978,3,c	;volatile
   610  007FD4  948A               	bcf	3978,2,c	;volatile
   611  007FD6  828A               	bsf	3978,1,c	;volatile
   612                           
   613                           ;main.c: 72:     if(PORTBbits.RB7 == 1){ while(PORTBbits.RB7 == 1){} return '*'; }
   614  007FD8  AE81               	btfss	3969,7,c	;volatile
   615  007FDA  D004               	goto	l77
   616  007FDC                     u190:
   617  007FDC  BE81               	btfsc	3969,7,c	;volatile
   618  007FDE  D7FE               	goto	u190
   619  007FE0  0E2A               	movlw	42
   620  007FE2  0012               	return	
   621  007FE4                     l77:
   622                           
   623                           ;main.c: 73:     if(PORTBbits.RB6 == 1){ while(PORTBbits.RB6 == 1){} return '0'; }
   624  007FE4  AC81               	btfss	3969,6,c	;volatile
   625  007FE6  D004               	goto	l81
   626  007FE8                     u210:
   627  007FE8  BC81               	btfsc	3969,6,c	;volatile
   628  007FEA  D7FE               	goto	u210
   629  007FEC  0E30               	movlw	48
   630  007FEE  0012               	return	
   631  007FF0                     l81:
   632                           
   633                           ;main.c: 74:     if(PORTBbits.RB5 == 1){ while(PORTBbits.RB5 == 1){} return '#'; }
   634  007FF0  AA81               	btfss	3969,5,c	;volatile
   635  007FF2  D004               	goto	l898
   636  007FF4                     u230:
   637  007FF4  BA81               	btfsc	3969,5,c	;volatile
   638  007FF6  D7FE               	goto	u230
   639  007FF8  0E23               	movlw	35
   640  007FFA  0012               	return	
   641  007FFC                     l898:
   642                           
   643                           ;main.c: 76:     return 'n';
   644  007FFC  0E6E               	movlw	110
   645  007FFE  0012               	return		;funcret
   646  008000                     __end_of_entrada_teclado:
   647                           	opt callstack 0
   648  0000                     
   649                           	psect	rparam
   650  0000                     tosu	equ	0xFFF
   651                           tosh	equ	0xFFE
   652                           tosl	equ	0xFFD
   653                           stkptr	equ	0xFFC
   654                           pclatu	equ	0xFFB
   655                           pclath	equ	0xFFA
   656                           pcl	equ	0xFF9
   657                           tblptru	equ	0xFF8
   658                           tblptrh	equ	0xFF7
   659                           tblptrl	equ	0xFF6
   660                           tablat	equ	0xFF5
   661                           prodh	equ	0xFF4
   662                           prodl	equ	0xFF3
   663                           indf0	equ	0xFEF
   664                           postinc0	equ	0xFEE
   665                           postdec0	equ	0xFED
   666                           preinc0	equ	0xFEC
   667                           plusw0	equ	0xFEB
   668                           fsr0h	equ	0xFEA
   669                           fsr0l	equ	0xFE9
   670                           wreg	equ	0xFE8
   671                           indf1	equ	0xFE7
   672                           postinc1	equ	0xFE6
   673                           postdec1	equ	0xFE5
   674                           preinc1	equ	0xFE4
   675                           plusw1	equ	0xFE3
   676                           fsr1h	equ	0xFE2
   677                           fsr1l	equ	0xFE1
   678                           bsr	equ	0xFE0
   679                           indf2	equ	0xFDF
   680                           postinc2	equ	0xFDE
   681                           postdec2	equ	0xFDD
   682                           preinc2	equ	0xFDC
   683                           plusw2	equ	0xFDB
   684                           fsr2h	equ	0xFDA
   685                           fsr2l	equ	0xFD9
   686                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      4       4
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_envia_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      45
                                              3 COMRAM     1     1      0
                    _entrada_teclado
                         _envia_char
                         _inicia_lcd
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _inicia_lcd                                           2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _envia_char                                           3     3      0      15
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _entrada_teclado                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _entrada_teclado
   _envia_char
   _inicia_lcd
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      4       4       1        4.2%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Fri Apr 05 22:34:11 2019

        ?_entrada_teclado 0001                        l40 7F60                        l33 7E78  
                      l61 7FA4                        l53 7F8C                        l45 7F6C  
                      l81 7FF0                        l73 7FD0                        l65 7FB8  
                      l57 7F98                        l49 7F78                        l77 7FE4  
                      l69 7FC4                        u10 7F58                        u30 7F64  
                      u50 7F70                        u70 7F84                        u90 7F90  
                     l898 7FFC                       u110 7F9C                       u210 7FE8  
                     u130 7FB0                       u230 7FF4                       u150 7FBC  
                     u170 7FC8                       u307 7F20                       u317 7F3C  
                     u190 7FDC                       u327 7EA6                       u277 7EC0  
                     u287 7EE0                       u297 7F00                       wreg 000FE8  
                    _LATD 000F8C                      _main 7E70                      start 0000  
            ___param_bank 000000                     ?_main 0001            envia_char@dado 0003  
                   _TRISD 000F95                     _setup 7E52                     status 000FD8  
         __initialization 7E4C              __end_of_main 7E8E                    ??_main 0004  
           __activetblptr 000000                    _ADCON1 000FC1                    ?_setup 0001  
              __accesstop 0060   __end_of__initialization 7E4C             ___rparam_used 000001  
          __pcstackCOMRAM 0001             __end_of_setup 7E70                   ??_setup 0001  
__size_of_entrada_teclado 00B4                _envia_char 7E8E                   __Hparam 0000  
              _inicia_lcd 7EB6                   __Lparam 0000                   __pcinit 7E4C  
                 __ramtop 0800                   __ptext0 7E70                   __ptext1 7E52  
                 __ptext2 7EB6                   __ptext3 7E8E                   __ptext4 7F4C  
                 main@key 0004      end_of_initialization 7E4C                 _PORTBbits 000F81  
               _TRISBbits 000F93                 _TRISCbits 000F94         ??_entrada_teclado 0001  
             ?_envia_char 0001               ?_inicia_lcd 0001       start_initialization 7E4C  
     __size_of_envia_char 0028       __size_of_inicia_lcd 0096            __size_of_setup 001E  
                _LATBbits 000F8A                  _LATCbits 000F8B           _entrada_teclado 7F4C  
            ??_envia_char 0001              ??_inicia_lcd 0001                  __Hrparam 0000  
                __Lrparam 0000        __end_of_envia_char 7EB6        __end_of_inicia_lcd 7F4C  
           __size_of_main 001E   __end_of_entrada_teclado 8000  
